/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blog;

import static blog.Main.rand;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author haiyka
 */
public class TestPerson extends javax.swing.JFrame {

    /**
     * Creates new form TestPerson
     */
    ButtonGroup group1 = new ButtonGroup();
    ButtonGroup group2 = new ButtonGroup();
    ButtonGroup group3 = new ButtonGroup();
    ButtonGroup group4 = new ButtonGroup();
    ButtonGroup group5 = new ButtonGroup();
    ButtonGroup group6 = new ButtonGroup();
    ButtonGroup group7 = new ButtonGroup();
    String dapan = " ", dapan1 = " ", nghia = " ", dapan2 = " ";
    String cauhoi, kanji, dapan3 = " ";
    int tong = 0, dung = 0, tong1 = 0, dung1 = 0;
    int dung2 = 0, tong2 = 0, dung3 = 0, tong3 = 0;
    int duyet = -1, duyet1 = 0, duyet2 = 0, duyet3 = 0;
    int method, speed, i;
    public String level, acc;
    int selectRow;
    int[] mang,mang2,mang3;

    public TestPerson(String account) {
        this.acc = account;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/hd3.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuy_chon2.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        chao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_list = new javax.swing.JTable();
        txt_khotu = new javax.swing.JTextField();
        cb_tt = new javax.swing.JCheckBox();
        cb_nn = new javax.swing.JCheckBox();
        cb_cham = new javax.swing.JCheckBox();
        cb_tb = new javax.swing.JCheckBox();
        cb_nhanh = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuantu_bgr.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        btn_batdau1 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("\\src\\blog\\pic\\bat_dau.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        reset1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ketqua = new javax.swing.JTextField();
        ht_ketqua = new javax.swing.JLabel();
        txt_cau_hoi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dap_an1 = new javax.swing.JRadioButton();
        dap_an2 = new javax.swing.JRadioButton();
        dap_an3 = new javax.swing.JRadioButton();
        dap_an4 = new javax.swing.JRadioButton();
        tra_loi1 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("src\\blog\\pic\\tra_loi.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jPanel2 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tri_nho.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        btn_batdau3 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("C:\\Users\\haiyka\\Documents\\NetBeansProjects\\DatabaseDemo\\src\\blog\\pic\\bat_dau.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        txt_cau_hoi2 = new javax.swing.JTextField();
        reset3 = new javax.swing.JButton();
        btn_stop1 = new javax.swing.JButton();
        ht_ketqua2 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/MUL_test_speed.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        btn_batdau2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_cau_hoi1 = new javax.swing.JTextField();
        ht_ketqua1 = new javax.swing.JLabel();
        reset2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ketqua1 = new javax.swing.JTextField();
        dap_an5 = new javax.swing.JRadioButton();
        dap_an6 = new javax.swing.JRadioButton();
        dap_an7 = new javax.swing.JRadioButton();
        dap_an8 = new javax.swing.JRadioButton();
        progressBar = new javax.swing.JProgressBar();
        btn_stop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1044, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Hướng dẫn sử dụng", jPanel6);

        chao.setText("Chào:"+acc);

        table_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Kho từ vựng của bạn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_list.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                table_listAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(table_list);

        txt_khotu.setEditable(false);

        cb_tt.setText("Tuần Tự");
        cb_tt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_ttActionPerformed(evt);
            }
        });

        cb_nn.setText("Ngẫu Nhiên");
        cb_nn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_nnActionPerformed(evt);
            }
        });

        cb_cham.setText("Chậm");
        cb_cham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_chamActionPerformed(evt);
            }
        });

        cb_tb.setText("Trung Bình");
        cb_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tbActionPerformed(evt);
            }
        });

        cb_nhanh.setText("Nhanh");
        cb_nhanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_nhanhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_cham)
                            .addComponent(cb_nn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_tt, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_tb)
                            .addComponent(cb_nhanh)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(txt_khotu, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chao, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(chao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txt_khotu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(cb_tt)
                        .addGap(28, 28, 28)
                        .addComponent(cb_nn)
                        .addGap(86, 86, 86)
                        .addComponent(cb_cham)
                        .addGap(27, 27, 27)
                        .addComponent(cb_tb)
                        .addGap(25, 25, 25)
                        .addComponent(cb_nhanh))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Tùy chọn", jPanel1);

        btn_batdau1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuantu_str.png"))); // NOI18N
        btn_batdau1.setSelected(true);
        btn_batdau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batdau1ActionPerformed(evt);
            }
        });

        reset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/BTN_RESET.png"))); // NOI18N
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Kết quả");

        ketqua.setEditable(false);
        ketqua.setCaretColor(new java.awt.Color(0, 255, 255));
        ketqua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketquaActionPerformed(evt);
            }
        });

        ht_ketqua.setForeground(new java.awt.Color(255, 255, 255));

        txt_cau_hoi.setEditable(false);
        txt_cau_hoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cau_hoiActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Chọn đáp án đúng");

        dap_an1.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an1ActionPerformed(evt);
            }
        });

        dap_an2.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an2ActionPerformed(evt);
            }
        });

        dap_an3.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an3ActionPerformed(evt);
            }
        });

        dap_an4.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an4ActionPerformed(evt);
            }
        });

        tra_loi1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuantu_SEL+x.png"))); // NOI18N
        tra_loi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tra_loi1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(tra_loi1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(403, 403, 403))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_cau_hoi, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_batdau1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(ht_ketqua, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(122, 122, 122))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(reset1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ketqua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112))))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dap_an4, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dap_an3, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dap_an2, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dap_an1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(reset1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ketqua))
                    .addComponent(btn_batdau1))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_cau_hoi, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ht_ketqua, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(dap_an1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(dap_an2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(dap_an3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(dap_an4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(tra_loi1)
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Kiểm tra thông thường", jPanel4);

        btn_batdau3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/start1.png"))); // NOI18N
        btn_batdau3.setSelected(true);
        btn_batdau3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batdau3ActionPerformed(evt);
            }
        });

        txt_cau_hoi2.setEditable(false);
        txt_cau_hoi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cau_hoi2ActionPerformed(evt);
            }
        });

        reset3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/BTN_RESET.png"))); // NOI18N
        reset3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset3ActionPerformed(evt);
            }
        });

        btn_stop1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/pause.png"))); // NOI18N
        btn_stop1.setMinimumSize(new java.awt.Dimension(119, 35));
        btn_stop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stop1ActionPerformed(evt);
            }
        });

        ht_ketqua2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ht_ketqua2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_batdau3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_stop1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(reset3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_cau_hoi2, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                    .addComponent(ht_ketqua2))
                .addGap(214, 214, 214))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(txt_cau_hoi2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(btn_batdau3)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btn_stop1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(ht_ketqua2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Trí nhớ phi thường", jPanel2);

        btn_batdau2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/thachthuc_str.png"))); // NOI18N
        btn_batdau2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batdau2ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Chọn đáp án đúng");

        txt_cau_hoi1.setEditable(false);
        txt_cau_hoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cau_hoi1ActionPerformed(evt);
            }
        });

        ht_ketqua1.setForeground(new java.awt.Color(255, 255, 255));

        reset2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/BTN_RESET.png"))); // NOI18N
        reset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Kết quả");

        dap_an5.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an5ActionPerformed(evt);
            }
        });

        dap_an6.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an6ActionPerformed(evt);
            }
        });

        dap_an7.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an7ActionPerformed(evt);
            }
        });

        dap_an8.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an8ActionPerformed(evt);
            }
        });

        btn_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/thahcthuc_pause.png"))); // NOI18N
        btn_stop.setMinimumSize(new java.awt.Dimension(119, 35));
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dap_an5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dap_an6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dap_an7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dap_an8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txt_cau_hoi1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ht_ketqua1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btn_batdau2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(ketqua1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addComponent(btn_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(107, 107, 107))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_batdau2)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(reset2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(ketqua1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_cau_hoi1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(ht_ketqua1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addComponent(dap_an5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(dap_an6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(dap_an7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(dap_an8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btn_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );

        jTabbedPane1.addTab("Thách thức tốc độ", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cb_nhanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_nhanhActionPerformed
        // TODO add your handling code here:
        group3.add(cb_nhanh);
    }//GEN-LAST:event_cb_nhanhActionPerformed

    private void cb_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tbActionPerformed
        // TODO add your handling code here:
        group3.add(cb_tb);
    }//GEN-LAST:event_cb_tbActionPerformed

    private void table_listAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_table_listAncestorAdded
        // TODO add your handling code here:
        Main db = new Main();
        db.connect();
        String sqlCommand = "select \"sheetname\" from \n"
                + "\"account\" natural join \"sheetname\" natural join \"connect\"\n"
                + "where \"name\" like '" + acc + "'";
        ResultSet rs = db.retrieveData(sqlCommand);

        //tạo tên cột
        Vector cols = new Vector();
        cols.addElement("Kho từ vựng của bạn");
        //Tạo  vector dữ liệu
        Vector data = new Vector();

        //System.out.println(db.executeUpdate() + "row");
        //sqlCommand = "Select * from htmt_";
        //rs = db.retrieveData(sqlCommand);
        try {
            while (rs.next()) {
                Vector kotoba = new Vector();
                kotoba.addElement(rs.getString("sheetname"));
                data.add(kotoba);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TestPerson.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Show từ mới
        table_list.setModel(new DefaultTableModel(data, cols));

        
        
       /*int row = table_list.getSelectedRow();
        System.out.println(row);
        if (row != -1) //JOptionPane.showMessageDialog(null, "Không có dòng nào được chọn");
        {
            String Table_click = (table_list.getValueAt(row, 0).toString());
            System.out.println("" + Table_click);
            txt_khotu.setText(Table_click);
        }*/
        
        table_list.addMouseListener(new MouseAdapter(){
        
        @Override
        public void mouseClicked(MouseEvent e){
            
            // i = the index of the selected row
            int i = table_list.getSelectedRow();
            
            txt_khotu.setText(table_list.getValueAt(i, 0).toString());
           
        }
        });
    }//GEN-LAST:event_table_listAncestorAdded


    
    private void tdbKhotu(java.awt.event.MouseEvent evt) {
        selectRow = table_list.getSelectedRow();
        if (evt.getClickCount() == 2) {
            txt_khotu.setText(table_list.getValueAt(selectRow, 1).toString());
        }
    }
    private void btn_batdau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batdau1ActionPerformed
        // TODO add your handling code here:

        String[] mangda = new String[4];
        String tgian;
        int tg;
        //method 1: tuần tự, 2: ngẫu nhiên
        //speed 1:chậm, 2: trung bình 3:nhanh
        int dem = 0, snn;
        int dem2 = 0;
        try {
            //tong++;
            //System.out.println(tong);
            level = txt_khotu.getText();
            ketqua.setText(dung + "/" + tong);
            System.out.println("end");
            Main db = new Main();
            db.connect();
            //System.out.println(db.executeUpdate() + "row");
            method = 0;
            speed = 0;
            if (cb_tt.isSelected()) {
                method = 1;
            }
            if (cb_nn.isSelected()) {
                method = 2;
            }
            if (method == 0) {
                JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cách thức kiểm tra");
            }

            if (method == 2) {
                tong++;
                ketqua.setText(dung + "/" + tong);
                System.out.println(" " + acc + level);
                String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                        + " sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                ResultSet rs = db.retrieveData(sqlCommand);

                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                mang = new int[dem];
                dem = dem - 1;
                System.out.println(dem);
                sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "')";
                rs = db.retrieveData(sqlCommand);
                dem2 = -1;
                while (rs.next()) {
                    dem2++;
                    mang[dem2] = rs.getInt(1);
                }

                snn = rand(0, dem);
                String strNumber = String.format("%d", mang[snn]);
                sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                //System.out.println(sqlCommand);
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                    txt_cau_hoi.setText(rs.getString(2));
                    cauhoi = rs.getString(2);
                    dapan = rs.getString(3);
                    mangda[0] = dapan;

                }

                strNumber = String.format("%d", mang[rand(0, dem)]);
                sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[1] = rs.getString(1);
                }

                strNumber = String.format("%d", mang[rand(0, dem)]);
                sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[2] = rs.getString(1);
                }

                strNumber = String.format("%d", mang[rand(0, dem)]);
                sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[3] = rs.getString(1);
                }

                // System.out.println("Chọn đáp án đúng: " + cauhoi);
                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;
                dap_an1.setText(mangda[0]);
                dap_an2.setText(mangda[1]);
                dap_an3.setText(mangda[2]);
                dap_an4.setText(mangda[3]);
            }

            if (method == 1) {
                tong++;
                ketqua.setText(dung + "/" + tong);
                duyet = -1;
                String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                        + " sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                mang = new int[dem];
                dem = dem - 1;

                sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "')";
                rs = db.retrieveData(sqlCommand);
                dem2 = -1;
                while (rs.next()) {
                    dem2++;
                    mang[dem2] = rs.getInt(1);
                }

                //for(duyet=1;duyet<=dem;duyet++){
                if (duyet <= dem) {
                    duyet++;
                    String strNumber = String.format("%d", mang[duyet]);
                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    //System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                        txt_cau_hoi.setText(rs.getString(2));
                        cauhoi = rs.getString(2);
                        dapan = rs.getString(3);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", mang[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", mang[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", mang[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an1.setText(mangda[0]);
                    dap_an2.setText(mangda[1]);
                    dap_an3.setText(mangda[2]);
                    dap_an4.setText(mangda[3]);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_batdau1ActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // TODO add your handling code here:
        tong = 0;
        dung = 0;
        duyet = 0;
        ketqua.setText(dung + "/" + tong);
        dap_an1.setText(" ");
        dap_an2.setText(" ");
        dap_an3.setText(" ");
        dap_an4.setText(" ");
        txt_cau_hoi.setText(" ");
        JOptionPane.showMessageDialog(null, "Bạn đã RESET kết quả thành công");
    }//GEN-LAST:event_reset1ActionPerformed

    private void ketquaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketquaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ketquaActionPerformed

    private void txt_cau_hoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cau_hoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cau_hoiActionPerformed

    private void dap_an1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an1ActionPerformed
        // TODO add your handling code here:
        group4.add(dap_an1);
    }//GEN-LAST:event_dap_an1ActionPerformed

    private void dap_an2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an2ActionPerformed
        // TODO add your handling code here:
        group4.add(dap_an2);
    }//GEN-LAST:event_dap_an2ActionPerformed

    private void dap_an3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an3ActionPerformed
        // TODO add your handling code here
        group4.add(dap_an3);
    }//GEN-LAST:event_dap_an3ActionPerformed

    private void dap_an4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an4ActionPerformed
        // TODO add your handling code here:
        group4.add(dap_an4);
    }//GEN-LAST:event_dap_an4ActionPerformed

    private void tra_loi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tra_loi1ActionPerformed
        // TODO add your handling code here:
        String xau = null;
        if (dap_an1.isSelected()) {

            xau = dap_an1.getText();
        }

        if (dap_an2.isSelected()) {

            xau = dap_an2.getText();
        }

        if (dap_an3.isSelected()) {

            xau = dap_an3.getText();
        }

        if (dap_an4.isSelected()) {

            xau = dap_an4.getText();
        }
        if (xau == null) {
            ht_ketqua.setText("Bạn vui lòng chọn đáp án");
        } else {
            if (xau == dapan) {
                //JOptionPane.showMessageDialog(null,"Bạn đã trả lời đúng.");
                ht_ketqua.setText("Bạn đã trả lời đúng.");
                dung++;
            } else {
                ht_ketqua.setText("Bạn đã trả lời sai - " + cauhoi.trim() + " : " + dapan);
            }
        }
        ketqua.setText(dung + "/" + tong);
        //---------------------------------------------------------
        if (method == 1) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {
                tong++;
                ketqua.setText(dung + "/" + tong);
                //ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                        + " sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                int[] mang;
                mang = new int[dem];
                dem = dem - 1;

                sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "')";
                rs = db.retrieveData(sqlCommand);
                int dem2 = -1;
                while (rs.next()) {
                    dem2++;
                    mang[dem2] = rs.getInt(1);
                }
                if (duyet == -1) {
                    duyet++;
                }
                if (duyet < dem) {
                    duyet++;
                    String strNumber = String.format("%d", mang[duyet]);
                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    //System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                        txt_cau_hoi.setText(rs.getString(2));
                        cauhoi = rs.getString(2);
                        dapan = rs.getString(3);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", mang[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", mang[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", mang[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an1.setText(mangda[0]);
                    dap_an2.setText(mangda[1]);
                    dap_an3.setText(mangda[2]);
                    dap_an4.setText(mangda[3]);
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho từ");
                    tong = tong - 1;
                    ketqua.setText(dung + " / " + tong);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (method == 2) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {
                tong++;
                ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                        + " sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                dem = dem - 1;
                System.out.println(dem);
                sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "')";
                rs = db.retrieveData(sqlCommand);
                int dem2 = -1;
                while (rs.next()) {
                    dem2++;
                    mang[dem2] = rs.getInt(1);
                }

                snn = rand(0, dem);
                String strNumber = String.format("%d", mang[snn]);
                sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                //System.out.println(sqlCommand);
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                    txt_cau_hoi.setText(rs.getString(2));
                    cauhoi = rs.getString(2);
                    dapan = rs.getString(3);
                    mangda[0] = dapan;

                }

                strNumber = String.format("%d", mang[rand(0, dem)]);
                sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[1] = rs.getString(1);
                }

                strNumber = String.format("%d", mang[rand(0, dem)]);
                sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[2] = rs.getString(1);
                }

                strNumber = String.format("%d", mang[rand(0, dem)]);
                sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                        + "sheetname natural join account natural join connect "
                        + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[3] = rs.getString(1);
                }

                // System.out.println("Chọn đáp án đúng: " + cauhoi);
                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;
                dap_an1.setText(mangda[0]);
                dap_an2.setText(mangda[1]);
                dap_an3.setText(mangda[2]);
                dap_an4.setText(mangda[3]);

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        //---------------------------------------------------------
    }//GEN-LAST:event_tra_loi1ActionPerformed

    private void cb_ttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_ttActionPerformed
        // TODO add your handling code here:
        group1.add(cb_tt);
    }//GEN-LAST:event_cb_ttActionPerformed

    private void cb_nnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_nnActionPerformed
        // TODO add your handling code here:
        group1.add(cb_nn);
    }//GEN-LAST:event_cb_nnActionPerformed

    private void cb_chamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_chamActionPerformed
        // TODO add your handling code here:
        group3.add(cb_cham);
    }//GEN-LAST:event_cb_chamActionPerformed

    private void btn_batdau2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batdau2ActionPerformed
        // TODO add your handling code here:
        String[] mangda = new String[4];
        String tgian;
        int tg;
        //method 1: tuần tự, 2: ngẫu nhiên
        //speed 1:chậm, 2: trung bình 3:nhanh
        int dem = 0, snn;
        int dem3 = 0;
        try {
            //tong++;
            //System.out.println(tong);
            level = txt_khotu.getText();
            ketqua1.setText(dung1 + "/" + tong1);
            System.out.println("end");
            Main db = new Main();
            db.connect();
            //System.out.println(db.executeUpdate() + "row");
            method = 0;
            speed = 0;
            if (cb_tt.isSelected()) {
                method = 1;
            }
            if (cb_nn.isSelected()) {
                method = 2;
            }
            if (method == 0) {
                JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cách thức kiểm tra");
            }

            if (cb_cham.isSelected()) {
                speed = 3;
            }
            if (cb_tb.isSelected()) {
                speed = 2;
            }
            if (cb_nhanh.isSelected()) {
                speed = 1;
            }
            if (speed == 0) {
                JOptionPane.showMessageDialog(null, "Ban vui lòng chọn tốc độ kiểm tra.");
                method =0;
            }
            

                if (method == 2) {
                    tong1++;
                    ketqua1.setText(dung1 + "/" + tong1);
                    System.out.println(" " + acc + level);
                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                            + " sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                    ResultSet rs = db.retrieveData(sqlCommand);

                    while (rs.next()) {
                        dem = rs.getInt(1);
                    }
                    mang2 = new int[dem];
                    dem = dem - 1;
                    System.out.println(dem);
                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                    rs = db.retrieveData(sqlCommand);
                    dem3 = -1;
                    while (rs.next()) {
                        dem3++;
                        mang2[dem3] = rs.getInt(1);
                    }

                    snn = rand(0, dem);
                    String strNumber = String.format("%d", mang2[snn]);
                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    //System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                        txt_cau_hoi1.setText(rs.getString(2));
                        cauhoi = rs.getString(2);
                        dapan = rs.getString(3);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", mang2[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", mang2[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", mang2[rand(0, dem)]);
                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an5.setText(mangda[0]);
                    dap_an6.setText(mangda[1]);
                    dap_an7.setText(mangda[2]);
                    dap_an8.setText(mangda[3]);
                }

                if (method == 1) {
                    tong1++;
                    ketqua1.setText(dung1 + "/" + tong1);
                    duyet1 = -1;
                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                            + " sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                    ResultSet rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        dem = rs.getInt(1);
                    }
                    mang2 = new int[dem];
                    dem = dem - 1;

                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                    rs = db.retrieveData(sqlCommand);
                    dem3 = -1;
                    while (rs.next()) {
                        dem3++;
                        mang2[dem3] = rs.getInt(1);
                    }

                    //for(duyet=1;duyet<=dem;duyet++){
                    if (duyet1 <= dem) {
                        duyet1++;
                        String strNumber = String.format("%d", mang2[duyet1]);
                        sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                + "sheetname natural join account natural join connect "
                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                        //System.out.println(sqlCommand);
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                            // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                            txt_cau_hoi1.setText(rs.getString(2));
                            cauhoi = rs.getString(2);
                            dapan = rs.getString(3);
                            mangda[0] = dapan;

                        }

                        strNumber = String.format("%d", mang2[rand(0, dem)]);
                        sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                + "sheetname natural join account natural join connect "
                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[1] = rs.getString(1);
                        }

                        strNumber = String.format("%d", mang2[rand(0, dem)]);
                        sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                + "sheetname natural join account natural join connect "
                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[2] = rs.getString(1);
                        }

                        strNumber = String.format("%d", mang2[rand(0, dem)]);
                        sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                + "sheetname natural join account natural join connect "
                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[3] = rs.getString(1);
                        }

                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;
                        dap_an5.setText(mangda[0]);
                        dap_an6.setText(mangda[1]);
                        dap_an7.setText(mangda[2]);
                        dap_an8.setText(mangda[3]);
                    }
                }
            }catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        //-------------------------------------------------------------------
        if (speed != 0) {
            Thread t1 = new Thread(new Runnable() {
                //int i = 0;
                @Override
                public void run() {
                    i = 0;
                    int tb = 0, n = 0;
                    while (i < 100) {
                        if (speed == 3) {
                            i = i + 1;
                        }
                        if (speed == 2) {

                            i = i + 4;

                        }
                        if (speed == 1) {

                            i = i + 7;

                        }
                        progressBar.setValue(i);
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(MyProgressBar.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        if (progressBar.getValue() == 100) {
                            i = 0;
                            //Tạo câu hỏi mới

                            String xau = null;
                            if (dap_an5.isSelected()) {

                                xau = dap_an5.getText();
                            }

                            if (dap_an6.isSelected()) {

                                xau = dap_an6.getText();
                            }

                            if (dap_an8.isSelected()) {

                                xau = dap_an8.getText();
                            }

                            if (dap_an7.isSelected()) {

                                xau = dap_an7.getText();
                            }
                            if (xau == null) {
                                ht_ketqua1.setText("Bạn vui lòng chọn đáp án");
                            } else {
                                if (xau == dapan) {
                                    //JOptionPane.showMessageDialog(null,"Bạn đã trả lời đúng.");
                                    ht_ketqua1.setText("Bạn đã trả lời đúng.");
                                    dung1++;
                                } else {
                                    ht_ketqua1.setText("Bạn đã trả lời sai - " + cauhoi.trim() + " : " + dapan);
                                }
                            }
                            ketqua1.setText(dung1 + "/" + tong1);
                            //---------------------------------------------------------
                            if (method == 1) {
                                String[] mangda = new String[4];
                                String tgian;
                                int tg;
                                int dem = 0, snn;
                                try {
                                    tong1++;
                                    ketqua1.setText(dung1 + "/" + tong1);
                                    //ketqua.setText(dung + "/" + tong);
                                    Main db = new Main();
                                    db.connect();
                                    //System.out.println(db.executeUpdate() + "row");
                                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                                            + " sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                                    ResultSet rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        dem = rs.getInt(1);
                                    }
                                    int[] mang;
                                    mang = new int[dem];
                                    dem = dem - 1;

                                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                                    rs = db.retrieveData(sqlCommand);
                                    int dem3 = -1;
                                    while (rs.next()) {
                                        dem3++;
                                        mang[dem3] = rs.getInt(1);
                                    }
                                    if (duyet1 == -1) {
                                        duyet1++;
                                    }
                                    if (duyet1 < dem) {
                                        duyet1++;
                                        String strNumber = String.format("%d", mang[duyet1]);
                                        sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                                + "sheetname natural join account natural join connect "
                                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                        //System.out.println(sqlCommand);
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                                            // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                                            txt_cau_hoi1.setText(rs.getString(2));
                                            cauhoi = rs.getString(2);
                                            dapan = rs.getString(3);
                                            mangda[0] = dapan;

                                        }

                                        strNumber = String.format("%d", mang[rand(0, dem)]);
                                        sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                                + "sheetname natural join account natural join connect "
                                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[1] = rs.getString(1);
                                        }

                                        strNumber = String.format("%d", mang[rand(0, dem)]);
                                        sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                                + "sheetname natural join account natural join connect "
                                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[2] = rs.getString(1);
                                        }

                                        strNumber = String.format("%d", mang[rand(0, dem)]);
                                        sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                                + "sheetname natural join account natural join connect "
                                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[3] = rs.getString(1);
                                        }

                                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;

                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;

                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;
                                        dap_an5.setText(mangda[0]);
                                        dap_an6.setText(mangda[1]);
                                        dap_an7.setText(mangda[2]);
                                        dap_an8.setText(mangda[3]);
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho từ");
                                        tong1 = tong1 - 1;
                                        ketqua1.setText(dung1 + " / " + tong1);
                                        break;
                                    }

                                } catch (SQLException ex) {
                                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            if (method == 2) {
                                String[] mangda = new String[4];
                                String tgian;
                                int tg;
                                int dem = 0, snn;
                                try {
                                    tong1++;
                                    ketqua1.setText(dung1 + "/" + tong1);
                                    Main db = new Main();
                                    db.connect();
                                    //System.out.println(db.executeUpdate() + "row");
                                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                                            + " sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                                    ResultSet rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        dem = rs.getInt(1);
                                    }
                                    dem = dem - 1;
                                    System.out.println(dem);
                                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                                    rs = db.retrieveData(sqlCommand);
                                    int dem3 = -1;
                                    while (rs.next()) {
                                        dem3++;
                                        mang2[dem3] = rs.getInt(1);
                                    }

                                    snn = rand(0, dem);
                                    String strNumber = String.format("%d", mang2[snn]);
                                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                    //System.out.println(sqlCommand);
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                                        txt_cau_hoi1.setText(rs.getString(2));
                                        cauhoi = rs.getString(2);
                                        dapan = rs.getString(3);
                                        mangda[0] = dapan;

                                    }

                                    strNumber = String.format("%d", mang2[rand(0, dem)]);
                                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        mangda[1] = rs.getString(1);
                                    }

                                    strNumber = String.format("%d", mang2[rand(0, dem)]);
                                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        mangda[2] = rs.getString(1);
                                    }

                                    strNumber = String.format("%d", mang2[rand(0, dem)]);
                                    sqlCommand = "select vn from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        mangda[3] = rs.getString(1);
                                    }

                                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                                    tg = rand(0, 3);
                                    tgian = mangda[tg];
                                    mangda[tg] = mangda[0];
                                    mangda[0] = tgian;

                                    tg = rand(0, 3);
                                    tgian = mangda[tg];
                                    mangda[tg] = mangda[0];
                                    mangda[0] = tgian;

                                    tg = rand(0, 3);
                                    tgian = mangda[tg];
                                    mangda[tg] = mangda[0];
                                    mangda[0] = tgian;
                                    dap_an5.setText(mangda[0]);
                                    dap_an6.setText(mangda[1]);
                                    dap_an7.setText(mangda[2]);
                                    dap_an8.setText(mangda[3]);

                                } catch (SQLException ex) {
                                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                                    //---------------------------------------------------------
                            //---------------------------------------------------------

                            //Kết thúc câu hỏi
                            //JOptionPane.showConfirmDialog(null, "Chương trình đã xử lý xong");
                            progressBar.setValue(0);
                        }
                    }
                }
            });
            t1.start();
        }
        //-------------------------------------------------------------------
    }//GEN-LAST:event_btn_batdau2ActionPerformed

    private void txt_cau_hoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cau_hoi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cau_hoi1ActionPerformed

    private void reset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset2ActionPerformed
        // TODO add your handling code here:
        tong1 = 0;
        dung1 = 0;
        duyet1 = 0;
        ketqua1.setText(dung1 + "/" + tong1);
        dap_an5.setText(" ");
        dap_an6.setText(" ");
        dap_an7.setText(" ");
        dap_an8.setText(" ");
        txt_cau_hoi1.setText(" ");
        progressBar.setValue(0);
        JOptionPane.showMessageDialog(null, "Bạn đã RESET kết quả thành công");
    }//GEN-LAST:event_reset2ActionPerformed

    private void dap_an5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an5ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an5);
    }//GEN-LAST:event_dap_an5ActionPerformed

    private void dap_an6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an6ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an6);
    }//GEN-LAST:event_dap_an6ActionPerformed

    private void dap_an7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an7ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an7);
    }//GEN-LAST:event_dap_an7ActionPerformed

    private void dap_an8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an8ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an8);
    }//GEN-LAST:event_dap_an8ActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed
        // TODO add your handling code here:
        i = 101;
    }//GEN-LAST:event_btn_stopActionPerformed

    private void btn_batdau3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batdau3ActionPerformed
        // TODO add your handling code here:
        String[] mangda = new String[4];
        String tgian;
        int tg;
        //method 1: tuần tự, 2: ngẫu nhiên
        //speed 1:chậm, 2: trung bình 3:nhanh
        int dem = 0, snn;
        int dem4 = 0;
        try {
            //tong++;
            //System.out.println(tong);
            level = txt_khotu.getText();
            ketqua1.setText(dung1 + "/" + tong1);
            System.out.println("end");
            Main db = new Main();
            db.connect();
            //System.out.println(db.executeUpdate() + "row");
            method = 0;
            speed = 0;
            if (cb_tt.isSelected()) {
                method = 1;
            }
            if (cb_nn.isSelected()) {
                method = 2;
            }
            if (method == 0) {
                JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cách thức kiểm tra");
            }

            if (cb_cham.isSelected()) {
                speed = 3;
            }
            if (cb_tb.isSelected()) {
                speed = 2;
            }
            if (cb_nhanh.isSelected()) {
                speed = 1;
            }
            if (speed == 0) {
                JOptionPane.showMessageDialog(null, "Ban vui lòng chọn tốc độ kiểm tra.");
                method =0;
            }
            

                if (method == 2) {
                    System.out.println(" " + acc + level);
                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                            + " sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                    ResultSet rs = db.retrieveData(sqlCommand);

                    while (rs.next()) {
                        dem = rs.getInt(1);
                    }
                    mang3 = new int[dem];
                    dem = dem - 1;
                    System.out.println(dem);
                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                    rs = db.retrieveData(sqlCommand);
                    dem4 = -1;
                    while (rs.next()) {
                        dem4++;
                        mang3[dem4] = rs.getInt(1);
                    }

                    snn = rand(0, dem);
                    String strNumber = String.format("%d", mang3[snn]);
                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                    //System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                        txt_cau_hoi2.setText(rs.getString(2));
                        cauhoi = rs.getString(2);
                        dapan = rs.getString(3);
                    }
                }

                if (method == 1) {   
                    duyet3 = -1;
                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                            + " sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                    ResultSet rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        dem = rs.getInt(1);
                    }
                    mang3 = new int[dem];
                    dem = dem - 1;

                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                            + "sheetname natural join account natural join connect "
                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                    rs = db.retrieveData(sqlCommand);
                    dem4 = -1;
                    while (rs.next()) {
                        dem4++;
                        mang3[dem4] = rs.getInt(1);
                    }

                    //for(duyet=1;duyet<=dem;duyet++){
                    if (duyet3 <= dem) {
                        duyet3++;
                        String strNumber = String.format("%d", mang3[duyet3]);
                        sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                + "sheetname natural join account natural join connect "
                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                        //System.out.println(sqlCommand);
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                            // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                            txt_cau_hoi2.setText(rs.getString(2));
                            cauhoi = rs.getString(2);
                            dapan = rs.getString(3);
                        }

                    }
                }
            }catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        //-------------------------------------------------------------------
        if (speed != 0) {
            Thread t1 = new Thread(new Runnable() {
                //int i = 0;
                @Override
                public void run() {
                    i = 0;
                    int tb = 0, n = 0;
                    while (i <= 100) {
                        if (speed == 3) {
                            i = i + 1;
                        }
                        if (speed == 2) {

                            i = i + 4;

                        }
                        if (speed == 1) {

                            i = i + 7;

                        }
              
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(MyProgressBar.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        if (i>=100) {
                            i = 0;
                            //Tạo câu hỏi mới
                                   ht_ketqua2.setText("Kết quả: - " + cauhoi.trim() + " : " + dapan);
              
                            //---------------------------------------------------------
                            if (method == 1) {
                                String[] mangda = new String[4];
                                String tgian;
                                int tg;
                                int dem = 0, snn;
                                try {
                            
                                    Main db = new Main();
                                    db.connect();
                                    //System.out.println(db.executeUpdate() + "row");
                                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                                            + " sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                                    ResultSet rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        dem = rs.getInt(1);
                                    }
                                    int[] mang;
                                    mang = new int[dem];
                                    dem = dem - 1;

                                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                                    rs = db.retrieveData(sqlCommand);
                                    int dem3 = -1;
                                    while (rs.next()) {
                                        dem3++;
                                        mang[dem3] = rs.getInt(1);
                                    }
                                    if (duyet3 == -1) {
                                        duyet3++;
                                    }
                                    if (duyet3 < dem) {
                                        duyet3++;
                                        String strNumber = String.format("%d", mang[duyet3]);
                                        sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                                + "sheetname natural join account natural join connect "
                                                + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                        //System.out.println(sqlCommand);
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                                            // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                                            txt_cau_hoi2.setText(rs.getString(2));
                                            cauhoi = rs.getString(2);
                                            dapan = rs.getString(3);
              
                                        }
   
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho từ");                                    
                                        break;
                                    }

                                } catch (SQLException ex) {
                                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            if (method == 2) {
                                String[] mangda = new String[4];
                                String tgian;
                                int tg;
                                int dem = 0, snn;
                                try {
                                    
                                    Main db = new Main();
                                    db.connect();
                                    //System.out.println(db.executeUpdate() + "row");
                                    String sqlCommand = "select count(stt) from (select * from vocab where idsheet in (select idsheet from"
                                            + " sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "'))a";
                                    ResultSet rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        dem = rs.getInt(1);
                                    }
                                    dem = dem - 1;
                                    System.out.println(dem);
                                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "')";
                                    rs = db.retrieveData(sqlCommand);
                                    int dem3 = -1;
                                    while (rs.next()) {
                                        dem3++;
                                        mang2[dem3] = rs.getInt(1);
                                    }

                                    snn = rand(0, dem);
                                    String strNumber = String.format("%d", mang2[snn]);
                                    sqlCommand = "select * from vocab where idsheet in (select idsheet from "
                                            + "sheetname natural join account natural join connect "
                                            + "where name like '" + acc + "' and sheetname like '" + level + "' and stt=" + strNumber + ")";
                                    //System.out.println(sqlCommand);
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                                        txt_cau_hoi2.setText(rs.getString(2));
                                        cauhoi = rs.getString(2);
                                        dapan = rs.getString(3);
                      
                                    }

                                } catch (SQLException ex) {
                                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                                    //---------------------------------------------------------
                            //---------------------------------------------------------

                            //Kết thúc câu hỏi
                            //JOptionPane.showConfirmDialog(null, "Chương trình đã xử lý xong");
     
                        }
                    }
                }
            });
            t1.start();
        }
        //-------------------------------------------------------------------
            
    }//GEN-LAST:event_btn_batdau3ActionPerformed
  
    private void txt_cau_hoi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cau_hoi2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cau_hoi2ActionPerformed

    private void reset3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset3ActionPerformed
        // TODO add your handling code here:

       
        duyet2 = 0;
        txt_cau_hoi2.setText(" ");
        ht_ketqua2.setText(" ");
        JOptionPane.showMessageDialog(null, "Bạn đã RESET thành công");
    }//GEN-LAST:event_reset3ActionPerformed

    private void btn_stop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stop1ActionPerformed
        // TODO add your handling code here:
        i=101;
    }//GEN-LAST:event_btn_stop1ActionPerformed

    private void ht_ketqua2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ht_ketqua2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ht_ketqua2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestPerson("haibka").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_batdau1;
    private javax.swing.JButton btn_batdau2;
    private javax.swing.JButton btn_batdau3;
    private javax.swing.JButton btn_stop;
    private javax.swing.JButton btn_stop1;
    private javax.swing.JCheckBox cb_cham;
    private javax.swing.JCheckBox cb_nhanh;
    private javax.swing.JCheckBox cb_nn;
    private javax.swing.JCheckBox cb_tb;
    private javax.swing.JCheckBox cb_tt;
    private javax.swing.JLabel chao;
    private javax.swing.JRadioButton dap_an1;
    private javax.swing.JRadioButton dap_an2;
    private javax.swing.JRadioButton dap_an3;
    private javax.swing.JRadioButton dap_an4;
    private javax.swing.JRadioButton dap_an5;
    private javax.swing.JRadioButton dap_an6;
    private javax.swing.JRadioButton dap_an7;
    private javax.swing.JRadioButton dap_an8;
    private javax.swing.JLabel ht_ketqua;
    private javax.swing.JLabel ht_ketqua1;
    private javax.swing.JTextField ht_ketqua2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField ketqua;
    private javax.swing.JTextField ketqua1;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset2;
    private javax.swing.JButton reset3;
    private javax.swing.JTable table_list;
    private javax.swing.JButton tra_loi1;
    private javax.swing.JTextField txt_cau_hoi;
    private javax.swing.JTextField txt_cau_hoi1;
    private javax.swing.JTextField txt_cau_hoi2;
    private javax.swing.JTextField txt_khotu;
    // End of variables declaration//GEN-END:variables

}
