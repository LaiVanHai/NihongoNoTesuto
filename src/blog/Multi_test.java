/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blog;

import static blog.Main.rand;
import java.awt.Dimension;
import java.awt.Graphics;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author haiyka
 */
public class Multi_test extends javax.swing.JFrame {

    /**
     * Creates new form Multi_test
     */
    ButtonGroup group1 = new ButtonGroup();
    ButtonGroup group2 = new ButtonGroup();
    ButtonGroup group3 = new ButtonGroup();
    ButtonGroup group4 = new ButtonGroup();
    ButtonGroup group5 = new ButtonGroup();
    ButtonGroup group6 = new ButtonGroup();
    ButtonGroup group7 = new ButtonGroup();
    String dapan = " ", dapan1 = " ", nghia = " ", dapan2 = " ";
    String cauhoi, kanji, dapan3 = " ";
    int tong = 0, dung = 0, tong1 = 0, dung1 = 0;
    int dung2 = 0, tong2 = 0, dung3 = 0, tong3 = 0;
    int duyet = 0, duyet1 = 0, duyet2 = 0, duyet3 = 0;
    int method, speed, i;
    String level;

    public Multi_test() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/hd2.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        jPanel2 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuychon_bgr2.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        cb_n1 = new javax.swing.JCheckBox();
        cb_n2 = new javax.swing.JCheckBox();
        cb_n3 = new javax.swing.JCheckBox();
        cb_n4 = new javax.swing.JCheckBox();
        cb_n5 = new javax.swing.JCheckBox();
        cb_tt = new javax.swing.JCheckBox();
        cb_nn = new javax.swing.JCheckBox();
        cb_tk = new javax.swing.JCheckBox();
        txt_begin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_end = new javax.swing.JTextField();
        cb_cham = new javax.swing.JCheckBox();
        cb_tb = new javax.swing.JCheckBox();
        cb_nhanh = new javax.swing.JCheckBox();
        btn_reset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuantu_bgr.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        jLabel6 = new javax.swing.JLabel();
        txt_cau_hoi = new javax.swing.JTextField();
        dap_an1 = new javax.swing.JRadioButton();
        dap_an2 = new javax.swing.JRadioButton();
        dap_an3 = new javax.swing.JRadioButton();
        dap_an4 = new javax.swing.JRadioButton();
        tra_loi1 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("src\\blog\\pic\\tra_loi.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        btn_batdau1 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("\\src\\blog\\pic\\bat_dau.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jLabel7 = new javax.swing.JLabel();
        ketqua = new javax.swing.JTextField();
        ht_ketqua = new javax.swing.JLabel();
        reset1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/MUL_test_speed.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        btn_batdau2 = new javax.swing.JButton();
        txt_cau_hoi1 = new javax.swing.JTextField();
        dap_an5 = new javax.swing.JRadioButton();
        dap_an6 = new javax.swing.JRadioButton();
        dap_an7 = new javax.swing.JRadioButton();
        dap_an8 = new javax.swing.JRadioButton();
        progressBar = new javax.swing.JProgressBar();
        btn_stop = new javax.swing.JButton();
        ht_ketqua1 = new javax.swing.JLabel();
        ketqua1 = new javax.swing.JTextField();
        reset2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/kanji_bgr.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        }

        ;
        jLabel8 = new javax.swing.JLabel();
        txt_cau_hoi2 = new javax.swing.JTextField();
        dap_an9 = new javax.swing.JRadioButton();
        dap_an10 = new javax.swing.JRadioButton();
        dap_an11 = new javax.swing.JRadioButton();
        dap_an12 = new javax.swing.JRadioButton();
        tra_loi2 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("C:\\Users\\haiyka\\Documents\\NetBeansProjects\\DatabaseDemo\\src\\blog\\pic\\tra_loi.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        btn_batdau3 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("C:\\Users\\haiyka\\Documents\\NetBeansProjects\\DatabaseDemo\\src\\blog\\pic\\bat_dau.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jLabel9 = new javax.swing.JLabel();
        ketqua2 = new javax.swing.JTextField();
        ht_ketqua2 = new javax.swing.JLabel();
        reset3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel(){
            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/hira_bgr.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        jLabel10 = new javax.swing.JLabel();
        txt_cau_hoi3 = new javax.swing.JTextField();
        dap_an13 = new javax.swing.JRadioButton();
        dap_an14 = new javax.swing.JRadioButton();
        dap_an15 = new javax.swing.JRadioButton();
        dap_an16 = new javax.swing.JRadioButton();
        tra_loi3 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("C:\\Users\\haiyka\\Documents\\NetBeansProjects\\DatabaseDemo\\src\\blog\\pic\\tra_loi.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        btn_batdau4 = new javax.swing.JButton(){
            ImageIcon icon = new ImageIcon("C:\\Users\\haiyka\\Documents\\NetBeansProjects\\DatabaseDemo\\src\\blog\\pic\\bat_dau.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jLabel11 = new javax.swing.JLabel();
        ketqua3 = new javax.swing.JTextField();
        ht_ketqua3 = new javax.swing.JLabel();
        reset4 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel(){

            ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/blog/pic/view.png"));
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);

            }
        };
        jScrollPane2 = new javax.swing.JScrollPane();
        table_w = new javax.swing.JTable();
        tb_thongbao = new javax.swing.JLabel();
        tb_soluong = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1017, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 581, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Hướng dẫn sử dụng", jPanel12);

        jPanel2.setPreferredSize(new java.awt.Dimension(5104, 804));

        cb_n1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_n1.setText("N1");
        cb_n1.setMargin(new java.awt.Insets(4, 4, 4, 4));
        cb_n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_n1ActionPerformed(evt);
            }
        });

        cb_n2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_n2.setText("N2");
        cb_n2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_n2ActionPerformed(evt);
            }
        });

        cb_n3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_n3.setText("N3");
        cb_n3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_n3ActionPerformed(evt);
            }
        });

        cb_n4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_n4.setText("N4");
        cb_n4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_n4ActionPerformed(evt);
            }
        });

        cb_n5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_n5.setText("N5");
        cb_n5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_n5ActionPerformed(evt);
            }
        });

        cb_tt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_tt.setText("Tuần tự");
        cb_tt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_ttActionPerformed(evt);
            }
        });

        cb_nn.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_nn.setText("Ngẫu nhiên");
        cb_nn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_nnActionPerformed(evt);
            }
        });

        cb_tk.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_tk.setText("Trong khoảng");
        cb_tk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tkActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Từ câu");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("đến ");

        cb_cham.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_cham.setText("Chậm 10s/câu");
        cb_cham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_chamActionPerformed(evt);
            }
        });

        cb_tb.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_tb.setText("Trung bình 7s/câu");
        cb_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tbActionPerformed(evt);
            }
        });

        cb_nhanh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_nhanh.setText("Nhanh 4s/câu");
        cb_nhanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_nhanhActionPerformed(evt);
            }
        });

        btn_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tc_reset.png"))); // NOI18N
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(cb_n1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(cb_n2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cb_tt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(cb_nn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                                .addComponent(cb_tk)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_begin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(txt_end, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(186, 186, 186))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(cb_n3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(cb_n4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_n5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cb_nhanh)
                        .addGap(196, 196, 196)
                        .addComponent(cb_tb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cb_cham)
                        .addGap(186, 186, 186))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_n1)
                    .addComponent(cb_n2)
                    .addComponent(cb_n3)
                    .addComponent(cb_n4)
                    .addComponent(cb_n5))
                .addGap(98, 98, 98)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cb_nn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cb_tt, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_tk)
                        .addComponent(txt_begin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txt_end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(94, 94, 94)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_nhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_cham, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(btn_reset)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tùy chọn", jPanel2);

        txt_cau_hoi.setEditable(false);
        txt_cau_hoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cau_hoiActionPerformed(evt);
            }
        });

        dap_an1.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an1ActionPerformed(evt);
            }
        });

        dap_an2.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an2ActionPerformed(evt);
            }
        });

        dap_an3.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an3ActionPerformed(evt);
            }
        });

        dap_an4.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an4ActionPerformed(evt);
            }
        });

        tra_loi1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuantu_SEL+x.png"))); // NOI18N
        tra_loi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tra_loi1ActionPerformed(evt);
            }
        });

        btn_batdau1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/tuantu_str.png"))); // NOI18N
        btn_batdau1.setSelected(true);
        btn_batdau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batdau1ActionPerformed(evt);
            }
        });

        ketqua.setEditable(false);
        ketqua.setCaretColor(new java.awt.Color(0, 255, 255));
        ketqua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketquaActionPerformed(evt);
            }
        });

        ht_ketqua.setForeground(new java.awt.Color(255, 255, 255));

        reset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/BTN_RESET.png"))); // NOI18N
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Chọn đáp án đúng");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Kết quả");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_cau_hoi, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btn_batdau1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ht_ketqua, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(reset1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ketqua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(109, 109, 109))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(dap_an1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dap_an4, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dap_an3, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                                .addComponent(dap_an2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(392, 392, 392)
                        .addComponent(tra_loi1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(16, 16, 16)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                                    .addComponent(ketqua)
                                    .addComponent(reset1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addComponent(btn_batdau1))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_cau_hoi, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(ht_ketqua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(32, 32, 32)
                .addComponent(dap_an1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dap_an2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(dap_an3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(dap_an4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(tra_loi1)
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Kiểm tra thông thường", jPanel3);

        btn_batdau2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/thachthuc_str.png"))); // NOI18N
        btn_batdau2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batdau2ActionPerformed(evt);
            }
        });

        txt_cau_hoi1.setEditable(false);
        txt_cau_hoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cau_hoi1ActionPerformed(evt);
            }
        });

        dap_an5.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an5ActionPerformed(evt);
            }
        });

        dap_an6.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an6ActionPerformed(evt);
            }
        });

        dap_an7.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an7ActionPerformed(evt);
            }
        });

        dap_an8.setFont(new java.awt.Font("UTM God's Word", 0, 20)); // NOI18N
        dap_an8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an8ActionPerformed(evt);
            }
        });

        btn_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/thahcthuc_pause.png"))); // NOI18N
        btn_stop.setMinimumSize(new java.awt.Dimension(119, 35));
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });

        ht_ketqua1.setForeground(new java.awt.Color(255, 255, 255));

        ketqua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketqua1ActionPerformed(evt);
            }
        });

        reset2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/BTN_RESET.png"))); // NOI18N
        reset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Kết quả");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Chọn đáp án đúng");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dap_an5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dap_an6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dap_an7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dap_an8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txt_cau_hoi1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(ht_ketqua1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btn_batdau2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ketqua1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(107, 107, 107))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                        .addComponent(reset2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(ketqua1, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(btn_batdau2))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_cau_hoi1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(ht_ketqua1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addComponent(dap_an5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(dap_an6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(dap_an7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(dap_an8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btn_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Thách thức tốc độ", jPanel4);

        txt_cau_hoi2.setEditable(false);
        txt_cau_hoi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cau_hoi2ActionPerformed(evt);
            }
        });

        dap_an9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an9ActionPerformed(evt);
            }
        });

        dap_an10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an10ActionPerformed(evt);
            }
        });

        dap_an11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an11ActionPerformed(evt);
            }
        });

        dap_an12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an12ActionPerformed(evt);
            }
        });

        tra_loi2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/kanji_sEL.png"))); // NOI18N
        tra_loi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tra_loi2ActionPerformed(evt);
            }
        });

        btn_batdau3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/kanji_str.png"))); // NOI18N
        btn_batdau3.setSelected(true);
        btn_batdau3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batdau3ActionPerformed(evt);
            }
        });

        ketqua2.setEditable(false);
        ketqua2.setCaretColor(new java.awt.Color(0, 255, 255));
        ketqua2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketqua2ActionPerformed(evt);
            }
        });

        ht_ketqua2.setForeground(new java.awt.Color(255, 255, 255));

        reset3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/BTN_RESET.png"))); // NOI18N
        reset3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset3ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Chọn đáp án đúng");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Kết quả");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btn_batdau3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(reset3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ketqua2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_cau_hoi2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                        .addComponent(ht_ketqua2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(109, 109, 109))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(dap_an12, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(dap_an9, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dap_an11, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                            .addComponent(dap_an10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(tra_loi2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(reset3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ketqua2)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btn_batdau3))
                .addGap(27, 27, 27)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ht_ketqua2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(txt_cau_hoi2))
                .addGap(43, 43, 43)
                .addComponent(dap_an9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dap_an10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(dap_an11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(dap_an12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(tra_loi2)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("漢字 -> ひら+ カタ ", jPanel8);

        txt_cau_hoi3.setEditable(false);
        txt_cau_hoi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cau_hoi3ActionPerformed(evt);
            }
        });

        dap_an13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an13ActionPerformed(evt);
            }
        });

        dap_an14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an14ActionPerformed(evt);
            }
        });

        dap_an15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an15ActionPerformed(evt);
            }
        });

        dap_an16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dap_an16ActionPerformed(evt);
            }
        });

        tra_loi3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/hira_sel.png"))); // NOI18N
        tra_loi3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tra_loi3ActionPerformed(evt);
            }
        });

        btn_batdau4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/hira_str.png"))); // NOI18N
        btn_batdau4.setSelected(true);
        btn_batdau4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batdau4ActionPerformed(evt);
            }
        });

        ketqua3.setEditable(false);
        ketqua3.setCaretColor(new java.awt.Color(0, 255, 255));
        ketqua3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ketqua3ActionPerformed(evt);
            }
        });

        ht_ketqua3.setForeground(new java.awt.Color(255, 255, 255));

        reset4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog/pic/BTN_RESET.png"))); // NOI18N
        reset4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset4ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Chọn đáp án đúng");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Kết quả");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(btn_batdau4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 360, Short.MAX_VALUE)
                        .addComponent(reset4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ketqua3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109))))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dap_an16, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dap_an15, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                            .addComponent(dap_an14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(360, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ht_ketqua3, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(txt_cau_hoi3, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(dap_an13, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(tra_loi3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel11)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btn_batdau4))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reset4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ketqua3))))
                .addGap(25, 25, 25)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(ht_ketqua3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_cau_hoi3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(44, 44, 44)
                .addComponent(dap_an13, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dap_an14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(dap_an15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(dap_an16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(tra_loi3)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(" ひら+ カタ -> 漢字 ", jPanel9);

        table_w.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tiếng Nhật", "Kanji", "Nghĩa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_w.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                table_wAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(table_w);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tb_soluong, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tb_thongbao, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(66, 66, 66))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(tb_thongbao, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tb_soluong, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Xem kho từ vựng", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1022, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 604, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_cau_hoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cau_hoiActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_cau_hoiActionPerformed

    private void dap_an1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an1ActionPerformed
        // TODO add your handling code here:
        group4.add(dap_an1);
    }//GEN-LAST:event_dap_an1ActionPerformed

    private void dap_an2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an2ActionPerformed
        // TODO add your handling code here:
        group4.add(dap_an2);
    }//GEN-LAST:event_dap_an2ActionPerformed

    private void dap_an3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an3ActionPerformed
        // TODO add your handling code here
        group4.add(dap_an3);
    }//GEN-LAST:event_dap_an3ActionPerformed

    private void dap_an4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an4ActionPerformed
        // TODO add your handling code here:
        group4.add(dap_an4);
    }//GEN-LAST:event_dap_an4ActionPerformed

    private void tra_loi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tra_loi1ActionPerformed
        // TODO add your handling code here:
        String xau = null;
        if (dap_an1.isSelected()) {

            xau = dap_an1.getText();

        }

        if (dap_an2.isSelected()) {

            xau = dap_an2.getText();

        }

        if (dap_an3.isSelected()) {

            xau = dap_an3.getText();
        }

        if (dap_an4.isSelected()) {

            xau = dap_an4.getText();
        }
        if (xau == null) {
            ht_ketqua.setText("Bạn vui lòng chọn đáp án");
        } else {
            if (xau == dapan) {
                //JOptionPane.showMessageDialog(null,"Bạn đã trả lời đúng.");
                ht_ketqua.setText("Bạn đã trả lời đúng.");
                dung++;
            } else {
                // JOptionPane.showMessageDialog(null,"Bạn đã trả lời sai - " + cauhoi.trim()+" : "+dapan);
                if (kanji != null) {
                    ht_ketqua.setText("Bạn đã trả lời sai - " + cauhoi.trim() + "(" + kanji.trim() + ") : " + dapan);
                } else {
                    ht_ketqua.setText("Bạn đã trả lời sai - " + cauhoi.trim() + " : " + dapan);
                }
            }
        }
        ketqua.setText(dung + "/" + tong);
        //---------------------------------------------------------
        if (method == 1) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {
                tong++;
                ketqua.setText(dung + "/" + tong);
                //ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                if (duyet == 0) {
                    duyet++;
                }
                if (duyet < dem) {
                    duyet++;
                    System.out.println(duyet);
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                        } else {
                            txt_cau_hoi.setText(rs.getString(2));
                        }
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        kanji = rs.getString(3);
                        dapan = rs.getString(4);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(4);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(4);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(4);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an1.setText(mangda[0]);
                    dap_an2.setText(mangda[1]);
                    dap_an3.setText(mangda[2]);
                    dap_an4.setText(mangda[3]);

                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho từ");
                    tong = tong - 1;
                    ketqua.setText(dung + " / " + tong);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (method == 2) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {
                tong++;
                ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                snn = rand(1, dem);
                String strNumber = String.format("%d", snn);
                sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                    if (rs.getString(3) != null) {
                        txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                    } else {
                        txt_cau_hoi.setText(rs.getString(2));
                    }
                    cauhoi = rs.getString(2);
                    //txt_cau_hoi.setText(cauhoi);
                    kanji = rs.getString(3);
                    dapan = rs.getString(4);
                    mangda[0] = dapan;

                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[1] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[2] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[3] = rs.getString(1);
                }

                // System.out.println("Chọn đáp án đúng: " + cauhoi);
                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;
                dap_an1.setText(mangda[0]);
                dap_an2.setText(mangda[1]);
                dap_an3.setText(mangda[2]);
                dap_an4.setText(mangda[3]);

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (method == 3) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {
                tong++;
                ketqua.setText(dung + "/" + tong);
                //ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                int begin = Integer.parseInt(txt_begin.getText().trim());
                int end = Integer.parseInt(txt_end.getText().trim());
                if (end == 0) {
                    JOptionPane.showMessageDialog(null, "Bạn đã nhập sai khoảng từ.");
                }

                if (begin == 0) {
                    JOptionPane.showMessageDialog(null, "Bạn đã nhập sai khoảng từ.");
                }
                if (duyet == 0) {
                    duyet = begin;
                }
                if (duyet < end) {
                    duyet++;
                    System.out.println(duyet);
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                        } else {
                            txt_cau_hoi.setText(rs.getString(2));
                        }
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        kanji = rs.getString(3);
                        dapan = rs.getString(4);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(4);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(4);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(4);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an1.setText(mangda[0]);
                    dap_an2.setText(mangda[1]);
                    dap_an3.setText(mangda[2]);
                    dap_an4.setText(mangda[3]);

                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho số từ lựa chọn");
                    tong = tong - 1;
                    ketqua.setText(dung + " / " + tong);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra");
            }
        }
        //---------------------------------------------------------
    }//GEN-LAST:event_tra_loi1ActionPerformed

    private void btn_batdau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batdau1ActionPerformed
        // TODO add your handling code here:

        String[] mangda = new String[4];
        String tgian;
        int tg;
        //method 1: tuần tự, 2: ngẫu nhiên
        //speed 1:chậm, 2: trung bình 3:nhanh
        int dem = 0, snn;
        try {
            //tong++;
            //System.out.println(tong);
            ketqua.setText(dung + "/" + tong);
            System.out.println("end");
            Main db = new Main();
            db.connect();
            //System.out.println(db.executeUpdate() + "row");
            level = null;
            method = 0;
            speed = 0;
            if (cb_n1.isSelected()) {
                level = cb_n1.getText();
            }
            if (cb_n2.isSelected()) {
                level = cb_n2.getText();
            }
            if (cb_n3.isSelected()) {
                level = cb_n3.getText();
            }
            if (cb_n4.isSelected()) {
                level = cb_n4.getText();
            }
            if (cb_n5.isSelected()) {
                level = cb_n5.getText();
            }
            if (level == null) {
                JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cấp độ kiểm tra");
            } else {
                if (cb_tt.isSelected()) {
                    method = 1;
                }
                if (cb_nn.isSelected()) {
                    method = 2;
                }
                if (cb_tk.isSelected()) {

                    int begin, end;

                    begin = Integer.parseInt(txt_begin.getText().trim());
                    end = Integer.parseInt(txt_end.getText().trim());
                    method=3;
                }
                if (method == 0) {
                    JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cách thức kiểm tra");
                }
                /* 
                 else
                 {
                 if(method==2)
                 {
                 if(cb_cham.isSelected())
                 {
                 speed=1;
                 }
                 if(cb_tb.isSelected())
                 {
                 speed=2;
                 }
                 if(cb_nhanh.isSelected())
                 {
                 speed=3;
                 }
                 if(speed==0)
                 {
                 JOptionPane.showMessageDialog(null, "Ban vui lòng chọn tốc độ kiểm tra.");
                 }
                 }
                 }*/
            }
            if (method == 2) {
                tong++;
                ketqua.setText(dung + "/" + tong);
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }

                snn = rand(1, dem);
                String strNumber = String.format("%d", snn);
                sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                //System.out.println(sqlCommand);
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                    if (rs.getString(3) != null) {
                        txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                    } else {
                        txt_cau_hoi.setText(rs.getString(2));
                    }
                    cauhoi = rs.getString(2);
                    //txt_cau_hoi.setText(cauhoi);
                    kanji = rs.getString(3);
                    dapan = rs.getString(4);
                    mangda[0] = dapan;

                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[1] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[2] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[3] = rs.getString(1);
                }

                // System.out.println("Chọn đáp án đúng: " + cauhoi);
                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;
                dap_an1.setText(mangda[0]);
                dap_an2.setText(mangda[1]);
                dap_an3.setText(mangda[2]);
                dap_an4.setText(mangda[3]);
            }

            if (method == 3) {
                tong++;
                ketqua.setText(dung + "/" + tong);
                int begin = Integer.parseInt(txt_begin.getText().trim());
                int end = Integer.parseInt(txt_end.getText().trim());
                if (end < begin) {
                    JOptionPane.showMessageDialog(null, "Bạn đã nhập sai khoảng từ.");
                }

                int duyet = begin - 1;
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                //for(duyet=1;duyet<=dem;duyet++){
                if (duyet < end) {
                    duyet++;
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                        } else {
                            txt_cau_hoi.setText(rs.getString(2));
                        }
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        kanji = rs.getString(3);
                        dapan = rs.getString(4);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an1.setText(mangda[0]);
                    dap_an2.setText(mangda[1]);
                    dap_an3.setText(mangda[2]);
                    dap_an4.setText(mangda[3]);
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết số từ lựa chọn");
                }
            }

            if (method == 1) {
                tong++;
                ketqua.setText(dung + "/" + tong);
                int duyet = 0;
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                //for(duyet=1;duyet<=dem;duyet++){
                if (duyet <= dem) {
                    duyet++;
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                        } else {
                            txt_cau_hoi.setText(rs.getString(2));
                        }
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        kanji = rs.getString(3);
                        dapan = rs.getString(4);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an1.setText(mangda[0]);
                    dap_an2.setText(mangda[1]);
                    dap_an3.setText(mangda[2]);
                    dap_an4.setText(mangda[3]);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra");
        }
    }//GEN-LAST:event_btn_batdau1ActionPerformed

    private void ketquaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketquaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ketquaActionPerformed

    private void btn_batdau2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batdau2ActionPerformed
        // TODO add your handling code here:
        String[] mangda = new String[4];
        String tgian;
        int tg;
        //method 1: tuần tự, 2: ngẫu nhiên
        //speed 1:chậm, 2: trung bình 3:nhanh
        int dem = 0, snn;
        try {
            //tong++;
            //System.out.println(tong);
            ketqua1.setText(dung1 + "/" + tong1);
            //System.out.println("end");
            Main db = new Main();
            db.connect();
            //System.out.println(db.executeUpdate() + "row");
            level = null;
            method = 0;
            speed = 0;
            if (cb_n1.isSelected()) {
                level = cb_n1.getText();
            }
            if (cb_n2.isSelected()) {
                level = cb_n2.getText();
            }
            if (cb_n3.isSelected()) {
                level = cb_n3.getText();
            }
            if (cb_n4.isSelected()) {
                level = cb_n4.getText();
            }
            if (cb_n5.isSelected()) {
                level = cb_n5.getText();
            }
            if (level == null) {
                JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cấp độ kiểm tra");
            } else {
                if (cb_tt.isSelected()) {
                    method = 1;
                }
                if (cb_nn.isSelected()) {
                    method = 2;
                }
                if (cb_tk.isSelected()) {
                    int begin = 0, end = 0;
                    begin = Integer.parseInt(txt_begin.getText().trim());
                    end = Integer.parseInt(txt_end.getText().trim());
                    if (begin != 0) {
                        if (end != 0) {
                            method = 3;
                        } else {
                            JOptionPane.showMessageDialog(null, "Bạn vui lòng kiểm tra lại khoảng câu hỏi");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Bạn vui lòng kiểm tra lại khoảng câu hỏi");
                    }
                }
                if (method == 0) {
                    JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cách thức kiểm tra");
                } else {

                    if (cb_cham.isSelected()) {
                        speed = 3;
                    }
                    if (cb_tb.isSelected()) {
                        speed = 2;
                    }
                    if (cb_nhanh.isSelected()) {
                        speed = 1;
                    }
                    if (speed == 0) {
                        JOptionPane.showMessageDialog(null, "Ban vui lòng chọn tốc độ kiểm tra.");
                    }
                }
            }
            if (method == 2) {
                if (speed != 0) {
                    tong1++;
                    ketqua1.setText(dung1 + "/" + tong1);
                    String sqlCommand = "Select count(stt) from htmt_" + level;
                    ResultSet rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        dem = rs.getInt(1);
                    }

                    snn = rand(1, dem);
                    String strNumber = String.format("%d", snn);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    //System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi1.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                        } else {
                            txt_cau_hoi1.setText(rs.getString(2));
                        }
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        kanji = rs.getString(3);
                        dapan = rs.getString(4);
                        mangda[0] = dapan;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an5.setText(mangda[0]);
                    dap_an6.setText(mangda[1]);
                    dap_an7.setText(mangda[2]);
                    dap_an8.setText(mangda[3]);
                }
            }
            if (method == 3) {
                if (speed != 0) {
                    tong1++;

                    ketqua1.setText(dung1 + "/" + tong1);
                    int begin = Integer.parseInt(txt_begin.getText().trim());
                    int end = Integer.parseInt(txt_end.getText().trim());
                    if (end < begin) {
                        JOptionPane.showMessageDialog(null, "Bạn đã nhập sai khoảng từ.");
                    }
                    int duyet1 = begin - 1;
                    String sqlCommand = "Select count(stt) from htmt_" + level;
                    ResultSet rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        dem = rs.getInt(1);
                    }
                    //for(duyet=1;duyet<=dem;duyet++){
                    if (duyet1 < end) {
                        duyet1++;
                        String strNumber = String.format("%d", duyet1);
                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                        System.out.println(sqlCommand);
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                            // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                            if (rs.getString(3) != null) {
                                txt_cau_hoi1.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                            } else {
                                txt_cau_hoi1.setText(rs.getString(2));
                            }
                            cauhoi = rs.getString(2);
                            //txt_cau_hoi.setText(cauhoi);
                            kanji = rs.getString(3);
                            dapan = rs.getString(4);
                            mangda[0] = dapan;

                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[1] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[2] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[3] = rs.getString(1);
                        }

                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;
                        dap_an5.setText(mangda[0]);
                        dap_an6.setText(mangda[1]);
                        dap_an7.setText(mangda[2]);
                        dap_an8.setText(mangda[3]);
                    } else {
                        JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết số từ lựa chọn");
                        tong1 = tong1 - 1;
                        ketqua1.setText(dung1 + " / " + tong1);
                    }
                }
            }

            if (method == 1) {
                if (speed != 0) {
                    tong1++;
                    ketqua1.setText(dung1 + "/" + tong1);
                    int duyet1 = 0;
                    String sqlCommand = "Select count(stt) from htmt_" + level;
                    ResultSet rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        dem = rs.getInt(1);
                    }
                    //for(duyet=1;duyet<=dem;duyet++){
                    if (duyet1 <= dem) {
                        duyet1++;
                        String strNumber = String.format("%d", duyet1);
                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                        System.out.println(sqlCommand);
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                            // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                            if (rs.getString(3) != null) {
                                txt_cau_hoi1.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                            } else {
                                txt_cau_hoi1.setText(rs.getString(2));
                            }
                            cauhoi = rs.getString(2);
                            //txt_cau_hoi.setText(cauhoi);
                            kanji = rs.getString(3);
                            dapan = rs.getString(4);
                            mangda[0] = dapan;

                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[1] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[2] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[3] = rs.getString(1);
                        }

                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;
                        dap_an5.setText(mangda[0]);
                        dap_an6.setText(mangda[1]);
                        dap_an7.setText(mangda[2]);
                        dap_an8.setText(mangda[3]);
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        //-------------------------------------------------------------------
        if (speed != 0) {
            Thread t1 = new Thread(new Runnable() {
                //int i = 0;
                @Override
                public void run() {
                    i = 0;
                    int tb = 0, n = 0;
                    while (i < 100) {
                        if (speed == 3) {
                            i = i + 1;
                        }
                        if (speed == 2) {

                            i = i + 4;

                        }
                        if (speed == 1) {

                            i = i + 7;

                        }
                        progressBar.setValue(i);
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(MyProgressBar.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        if (progressBar.getValue() == 100) {
                            i = 0;
                            //Tạo câu hỏi mới

                            String xau = null;
                            if (dap_an5.isSelected()) {

                                xau = dap_an5.getText();

                            }

                            if (dap_an6.isSelected()) {

                                xau = dap_an6.getText();

                            }

                            if (dap_an7.isSelected()) {

                                xau = dap_an7.getText();
                            }

                            if (dap_an8.isSelected()) {

                                xau = dap_an8.getText();
                            }
                            if (xau == null) {
                                ht_ketqua1.setText("Bạn vui lòng chọn đáp án");
                            } else {
                                if (xau == dapan) {
                                    //JOptionPane.showMessageDialog(null,"Bạn đã trả lời đúng.");
                                    ht_ketqua1.setText("Bạn đã trả lời đúng.");
                                    dung1++;
                                } else {
                                    // JOptionPane.showMessageDialog(null,"Bạn đã trả lời sai - " + cauhoi.trim()+" : "+dapan);
                                    if (kanji != null) {
                                        ht_ketqua1.setText("Bạn đã trả lời sai - " + cauhoi.trim() + "(" + kanji.trim() + ") : " + dapan);
                                    } else {
                                        ht_ketqua1.setText("Bạn đã trả lời sai - " + cauhoi.trim() + " : " + dapan);
                                    }
                                }
                            }
                            ketqua1.setText(dung1 + "/" + tong1);
                            //---------------------------------------------------------
                            if (method == 1) {
                                String[] mangda = new String[4];
                                String tgian;
                                int tg;
                                int dem = 0, snn;
                                try {
                                    tong1++;
                                    ketqua1.setText(dung1 + "/" + tong1);
                                    //ketqua.setText(dung + "/" + tong);
                                    Main db = new Main();
                                    db.connect();
                                    //System.out.println(db.executeUpdate() + "row");
                                    String sqlCommand = "Select count(stt) from htmt_" + level;
                                    ResultSet rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        dem = rs.getInt(1);
                                    }
                                    if (duyet1 == 0) {
                                        duyet1++;
                                    }
                                    if (duyet1 < dem) {
                                        duyet1++;
                                        System.out.println(duyet1);
                                        String strNumber = String.format("%d", duyet1);
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                                            //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                                            if (rs.getString(3) != null) {
                                                txt_cau_hoi1.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                                            } else {
                                                txt_cau_hoi1.setText(rs.getString(2));
                                            }
                                            cauhoi = rs.getString(2);
                                            //txt_cau_hoi.setText(cauhoi);
                                            kanji = rs.getString(3);
                                            dapan = rs.getString(4);
                                            mangda[0] = dapan;

                                        }

                                        strNumber = String.format("%d", rand(1, dem));
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[1] = rs.getString(4);
                                        }

                                        strNumber = String.format("%d", rand(1, dem));
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[2] = rs.getString(4);
                                        }

                                        strNumber = String.format("%d", rand(1, dem));
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[3] = rs.getString(4);
                                        }

                                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;

                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;

                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;
                                        dap_an5.setText(mangda[0]);
                                        dap_an6.setText(mangda[1]);
                                        dap_an7.setText(mangda[2]);
                                        dap_an8.setText(mangda[3]);

                                    } else {
                                        JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho từ.");
                                        tong1 = tong1 - 1;
                                        ketqua1.setText(dung1 + " / " + tong1);
                                    }

                                } catch (SQLException ex) {
                                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            if (method == 2) {
                                String[] mangda1 = new String[4];
                                String tgian;
                                int tg;
                                int dem = 0, snn;
                                try {
                                    tong1++;
                                    ketqua1.setText(dung1 + "/" + tong1);
                                    Main db = new Main();
                                    db.connect();
                                    //System.out.println(db.executeUpdate() + "row");
                                    String sqlCommand = "Select count(stt) from htmt_" + level;
                                    ResultSet rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        dem = rs.getInt(1);
                                    }
                                    snn = rand(1, dem);
                                    String strNumber = String.format("%d", snn);
                                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                                        //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                                        if (rs.getString(3) != null) {
                                            txt_cau_hoi1.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                                        } else {
                                            txt_cau_hoi1.setText(rs.getString(2));
                                        }
                                        cauhoi = rs.getString(2);
                                        //txt_cau_hoi.setText(cauhoi);
                                        kanji = rs.getString(3);
                                        dapan = rs.getString(4);
                                        mangda1[0] = dapan;

                                    }

                                    strNumber = String.format("%d", rand(1, dem));
                                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        mangda1[1] = rs.getString(1);
                                    }

                                    strNumber = String.format("%d", rand(1, dem));
                                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        mangda1[2] = rs.getString(1);
                                    }

                                    strNumber = String.format("%d", rand(1, dem));
                                    sqlCommand = "Select vn from htmt_" + level + " where stt=" + strNumber;
                                    rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        mangda1[3] = rs.getString(1);
                                    }

                                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                                    tg = rand(0, 3);
                                    tgian = mangda1[tg];
                                    mangda1[tg] = mangda1[0];
                                    mangda1[0] = tgian;

                                    tg = rand(0, 3);
                                    tgian = mangda1[tg];
                                    mangda1[tg] = mangda1[0];
                                    mangda1[0] = tgian;

                                    tg = rand(0, 3);
                                    tgian = mangda1[tg];
                                    mangda1[tg] = mangda1[0];
                                    mangda1[0] = tgian;
                                    dap_an5.setText(mangda1[0]);
                                    dap_an6.setText(mangda1[1]);
                                    dap_an7.setText(mangda1[2]);
                                    dap_an8.setText(mangda1[3]);

                                } catch (SQLException ex) {
                                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }

                            if (method == 3) {
                                String[] mangda = new String[4];
                                String tgian;
                                int tg;
                                int dem = 0, snn;
                                try {
                                    tong1++;
                                    ketqua1.setText(dung1 + "/" + tong1);
                                    //ketqua.setText(dung + "/" + tong);
                                    Main db = new Main();
                                    db.connect();
                                    //System.out.println(db.executeUpdate() + "row");
                                    String sqlCommand = "Select count(stt) from htmt_" + level;
                                    ResultSet rs = db.retrieveData(sqlCommand);
                                    while (rs.next()) {
                                        dem = rs.getInt(1);
                                    }
                                    int begin = Integer.parseInt(txt_begin.getText().trim());
                                    int end = Integer.parseInt(txt_end.getText().trim());
                                    if (duyet1 == 0) {
                                        duyet1 = begin;
                                    }
                                    if (duyet1 < end) {
                                        duyet1++;
                                        System.out.println(duyet1);
                                        String strNumber = String.format("%d", duyet1);
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                                            //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                                            if (rs.getString(3) != null) {
                                                txt_cau_hoi1.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim() + ")");
                                            } else {
                                                txt_cau_hoi1.setText(rs.getString(2));
                                            }
                                            cauhoi = rs.getString(2);
                                            //txt_cau_hoi.setText(cauhoi);
                                            kanji = rs.getString(3);
                                            dapan = rs.getString(4);
                                            mangda[0] = dapan;

                                        }

                                        strNumber = String.format("%d", rand(1, dem));
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[1] = rs.getString(4);
                                        }

                                        strNumber = String.format("%d", rand(1, dem));
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[2] = rs.getString(4);
                                        }

                                        strNumber = String.format("%d", rand(1, dem));
                                        sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                                        rs = db.retrieveData(sqlCommand);
                                        while (rs.next()) {
                                            mangda[3] = rs.getString(4);
                                        }

                                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;

                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;

                                        tg = rand(0, 3);
                                        tgian = mangda[tg];
                                        mangda[tg] = mangda[0];
                                        mangda[0] = tgian;
                                        dap_an5.setText(mangda[0]);
                                        dap_an6.setText(mangda[1]);
                                        dap_an7.setText(mangda[2]);
                                        dap_an8.setText(mangda[3]);

                                    } else {
                                        JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho số từ lựa chọn");
                                        tong1 = tong1 - 1;
                                        ketqua1.setText(dung1 + " / " + tong1);
                                        break;
                                    }

                                } catch (SQLException ex) {
                                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
        //---------------------------------------------------------
                            //---------------------------------------------------------

                            //Kết thúc câu hỏi
                            //JOptionPane.showConfirmDialog(null, "Chương trình đã xử lý xong");
                            progressBar.setValue(0);
                        }
                    }
                }
            });
            t1.start();
        }
//-------------------------------------------------------------------
    }//GEN-LAST:event_btn_batdau2ActionPerformed

    private void txt_cau_hoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cau_hoi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cau_hoi1ActionPerformed

    private void dap_an5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an5ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an5);
    }//GEN-LAST:event_dap_an5ActionPerformed

    private void dap_an6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an6ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an6);
    }//GEN-LAST:event_dap_an6ActionPerformed

    private void dap_an7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an7ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an7);
    }//GEN-LAST:event_dap_an7ActionPerformed

    private void dap_an8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an8ActionPerformed
        // TODO add your handling code here:
        group5.add(dap_an8);
    }//GEN-LAST:event_dap_an8ActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed
        // TODO add your handling code here:
        i = 100;
    }//GEN-LAST:event_btn_stopActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
        cb_cham.setSelected(false);
        cb_tb.setSelected(false);
        cb_nhanh.setSelected(false);
        cb_n1.setSelected(false);
        cb_n2.setSelected(false);
        cb_n3.setSelected(false);
        cb_n4.setSelected(false);
        cb_n5.setSelected(false);
        cb_tt.setSelected(false);
        cb_nn.setSelected(false);
        cb_tk.setSelected(false);
        tong = 0;
        dung = 0;
        tong1 = 0;
        dung1 = 0;
        duyet = 0;
        duyet1 = 0;
        duyet2 = 0;
        tong2 = 0;
        dung2 = 0;
        tong3 = 0;
        dung3 = 0;
        ketqua.setText(dung + "/" + tong);
        ketqua1.setText(dung + "/" + tong);
        ketqua2.setText(dung + "/" + tong);
        ketqua3.setText(dung + "/" + tong);
        dap_an1.setText(" ");
        dap_an2.setText(" ");
        dap_an3.setText(" ");
        dap_an4.setText(" ");
        dap_an5.setText(" ");
        dap_an6.setText(" ");
        dap_an7.setText(" ");
        dap_an8.setText(" ");
        dap_an9.setText(" ");
        dap_an10.setText(" ");
        dap_an11.setText(" ");
        dap_an12.setText(" ");
        dap_an13.setText(" ");
        dap_an14.setText(" ");
        dap_an15.setText(" ");
        txt_cau_hoi.setText(" ");
        txt_cau_hoi1.setText(" ");
        txt_cau_hoi2.setText(" ");
        txt_cau_hoi3.setText(" ");
        progressBar.setValue(0);
        txt_begin.setText(" ");
        txt_end.setText(" ");
        JOptionPane.showMessageDialog(null, "Bạn đã RESET kết quả thành công");
    }//GEN-LAST:event_btn_resetActionPerformed

    private void cb_nhanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_nhanhActionPerformed
        // TODO add your handling code here:
        group3.add(cb_nhanh);
    }//GEN-LAST:event_cb_nhanhActionPerformed

    private void cb_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tbActionPerformed
        // TODO add your handling code here:
        group3.add(cb_tb);
    }//GEN-LAST:event_cb_tbActionPerformed

    private void cb_chamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_chamActionPerformed
        // TODO add your handling code here:
        group3.add(cb_cham);
    }//GEN-LAST:event_cb_chamActionPerformed

    private void cb_tkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tkActionPerformed
        // TODO add your handling code here:
        group2.add(cb_tk);
    }//GEN-LAST:event_cb_tkActionPerformed

    private void cb_nnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_nnActionPerformed
        // TODO add your handling code here:
        group2.add(cb_nn);
    }//GEN-LAST:event_cb_nnActionPerformed

    private void cb_ttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_ttActionPerformed
        // TODO add your handling code here:
        group2.add(cb_tt);
    }//GEN-LAST:event_cb_ttActionPerformed

    private void cb_n5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_n5ActionPerformed
        // TODO add your handling code here:
        group1.add(cb_n5);
    }//GEN-LAST:event_cb_n5ActionPerformed

    private void cb_n4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_n4ActionPerformed
        // TODO add your handling code here:
        group1.add(cb_n4);
    }//GEN-LAST:event_cb_n4ActionPerformed

    private void cb_n3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_n3ActionPerformed
        // TODO add your handling code here:
        group1.add(cb_n3);
    }//GEN-LAST:event_cb_n3ActionPerformed

    private void cb_n2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_n2ActionPerformed
        // TODO add your handling code here:
        group1.add(cb_n2);
    }//GEN-LAST:event_cb_n2ActionPerformed

    private void cb_n1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_n1ActionPerformed
        // TODO add your handling code here:
        group1.add(cb_n1);
    }//GEN-LAST:event_cb_n1ActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // TODO add your handling code here:
        tong = 0;
        dung = 0;
        duyet = 0;
        ketqua.setText(dung + "/" + tong);
        dap_an1.setText(" ");
        dap_an2.setText(" ");
        dap_an3.setText(" ");
        dap_an4.setText(" ");
        txt_cau_hoi.setText(" ");
        JOptionPane.showMessageDialog(null, "Bạn đã RESET kết quả thành công");
    }//GEN-LAST:event_reset1ActionPerformed

    private void reset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset2ActionPerformed
        // TODO add your handling code here:
        tong1 = 0;
        dung1 = 0;
        duyet1 = 0;
        ketqua1.setText(dung1 + "/" + tong1);
        dap_an5.setText(" ");
        dap_an6.setText(" ");
        dap_an7.setText(" ");
        dap_an8.setText(" ");
        txt_cau_hoi1.setText(" ");
        progressBar.setValue(0);
        JOptionPane.showMessageDialog(null, "Bạn đã RESET kết quả thành công");
    }//GEN-LAST:event_reset2ActionPerformed

    private void table_wAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_table_wAncestorAdded
        // TODO add your handling code here:
        int dem = 0;
        if (cb_n1.isSelected()) {
            level = cb_n1.getText();
        }
        if (cb_n2.isSelected()) {
            level = cb_n2.getText();
        }
        if (cb_n3.isSelected()) {
            level = cb_n3.getText();
        }
        if (cb_n4.isSelected()) {
            level = cb_n4.getText();
        }
        if (cb_n5.isSelected()) {
            level = cb_n5.getText();
        }
        if (level == null) {
            JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn bảng để hiển thị");
        }
        if (level != null) {
            tb_thongbao.setText("Đây là kho từ vựng " + level + " của hệ thống");
            Main db = new Main();
            db.connect();
            String sqlCommand = "Select count(stt) from htmt_" + level;
            ResultSet rs = db.retrieveData(sqlCommand);
            try {
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                String strNumber = String.format("%d", dem);
                tb_soluong.setText("Số lượng từ mới: " + dem);
            } catch (SQLException ex) {
                Logger.getLogger(Multi_test.class.getName()).log(Level.SEVERE, null, ex);
            }

            //tạo tên cột
            Vector cols = new Vector();
            cols.addElement("STT");
            cols.addElement("Tiếng Nhật");
            cols.addElement("Kanji");
            cols.addElement("Nghĩa");
            //Tạo  vector dữ liệu
            Vector data = new Vector();

            //System.out.println(db.executeUpdate() + "row");
            sqlCommand = "Select * from htmt_" + level;
            rs = db.retrieveData(sqlCommand);
            try {
                while (rs.next()) {
                    Vector kotoba = new Vector();
                    kotoba.addElement(rs.getInt("stt"));
                    kotoba.addElement(rs.getString("jp"));
                    kotoba.addElement(rs.getString("kanji"));
                    kotoba.addElement(rs.getString("vn"));
                    data.add(kotoba);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Multi_test.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Show từ mới
            table_w.setModel(new DefaultTableModel(data, cols));
        }
    }//GEN-LAST:event_table_wAncestorAdded

    private void txt_cau_hoi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cau_hoi2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cau_hoi2ActionPerformed

    private void dap_an9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an9ActionPerformed
        // TODO add your handling code here:
        group6.add(dap_an9);
    }//GEN-LAST:event_dap_an9ActionPerformed

    private void dap_an10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an10ActionPerformed
        // TODO add your handling code here:
        group6.add(dap_an10);
    }//GEN-LAST:event_dap_an10ActionPerformed

    private void dap_an11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an11ActionPerformed
        // TODO add your handling code here:
        group6.add(dap_an11);
    }//GEN-LAST:event_dap_an11ActionPerformed

    private void dap_an12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an12ActionPerformed
        // TODO add your handling code here:
        group6.add(dap_an12);
    }//GEN-LAST:event_dap_an12ActionPerformed

    private void tra_loi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tra_loi2ActionPerformed
        // TODO add your handling code here:

        //---------------------------------------------
        String xau = null;
        if (dap_an9.isSelected()) {

            xau = dap_an9.getText();

        }

        if (dap_an10.isSelected()) {

            xau = dap_an10.getText();

        }

        if (dap_an11.isSelected()) {

            xau = dap_an11.getText();
        }

        if (dap_an12.isSelected()) {

            xau = dap_an12.getText();
        }
        if (xau == null) {
            ht_ketqua2.setText("Bạn vui lòng chọn đáp án");
        } else {
            if (xau == dapan2) {
                //JOptionPane.showMessageDialog(null,"Bạn đã trả lời đúng.");
                ht_ketqua2.setText("Bạn đã trả lời đúng. :" + dapan2.trim() + "( " + cauhoi.trim() + " ):" + nghia.trim());
                dung2++;
            } else {
                // JOptionPane.showMessageDialog(null,"Bạn đã trả lời sai - " + cauhoi.trim()+" : "+dapan);
                ht_ketqua2.setText("Bạn đã trả lời sai: " + dapan2.trim() + "( " + cauhoi.trim() + " ):" + nghia.trim());
            }
        }
        ketqua2.setText(dung2 + "/" + tong2);
        //---------------------------------------------------------
        if (method == 1) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {

                //ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                if (duyet2 == 0) {
                    duyet2++;
                }
                if (duyet2 < dem) {
                    duyet2++;
                    System.out.println(duyet2);
                    String strNumber = String.format("%d", duyet2);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            tong2++;
                            ketqua2.setText(dung2 + "/" + tong2);
                            txt_cau_hoi2.setText(rs.getString(3).trim());
                            cauhoi = rs.getString(3);
                            //txt_cau_hoi.setText(cauhoi);
                            nghia = rs.getString(4);
                            dapan2 = rs.getString(2);
                            mangda[0] = dapan2;

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[1] = rs.getString(2);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[2] = rs.getString(2);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[3] = rs.getString(2);
                            }

                            // System.out.println("Chọn đáp án đúng: " + cauhoi);
                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;
                            dap_an9.setText(mangda[0]);
                            dap_an10.setText(mangda[1]);
                            dap_an11.setText(mangda[2]);
                            dap_an12.setText(mangda[3]);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho từ");
                    //tong2 = tong2 - 1;
                    //ketqua2.setText(dung2 + " / " + tong2);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (method == 2) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {

                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                snn = rand(1, dem);
                String strNumber = String.format("%d", snn);
                sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                    if (rs.getString(3) != null) {
                        txt_cau_hoi2.setText(rs.getString(3).trim());
                        tong2++;
                        ketqua2.setText(dung2 + "/" + tong2);
                        cauhoi = rs.getString(3);
                        //txt_cau_hoi.setText(cauhoi);
                        nghia = rs.getString(4);
                        dapan2 = rs.getString(2);
                        mangda[0] = dapan2;

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[1] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[2] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[3] = rs.getString(1);
                        }

                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;
                        dap_an9.setText(mangda[0]);
                        dap_an10.setText(mangda[1]);
                        dap_an11.setText(mangda[2]);
                        dap_an12.setText(mangda[3]);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (method == 3) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {

                //ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                int begin = Integer.parseInt(txt_begin.getText().trim());
                int end = Integer.parseInt(txt_end.getText().trim());
                if (duyet2 == 0) {
                    duyet2 = begin;
                }
                if (duyet2 < end) {
                    duyet2++;
                    System.out.println(duyet);
                    String strNumber = String.format("%d", duyet2);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi2.setText(rs.getString(3).trim());
                            tong2++;
                            ketqua2.setText(dung2 + "/" + tong2);
                            cauhoi = rs.getString(3);
                            //txt_cau_hoi.setText(cauhoi);
                            nghia = rs.getString(4);
                            dapan2 = rs.getString(2);
                            mangda[0] = dapan2;

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[1] = rs.getString(4);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[2] = rs.getString(4);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[3] = rs.getString(4);
                            }

                            // System.out.println("Chọn đáp án đúng: " + cauhoi);
                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;
                            dap_an9.setText(mangda[0]);
                            dap_an10.setText(mangda[1]);
                            dap_an11.setText(mangda[2]);
                            dap_an12.setText(mangda[3]);

                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho số từ lựa chọn");
                    //tong2 = tong2 - 1;
                    //ketqua2.setText(dung2 + " / " + tong2);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //---------------------------------------------
    }//GEN-LAST:event_tra_loi2ActionPerformed

    private void btn_batdau3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batdau3ActionPerformed
        // TODO add your handling code here:
        String[] mangda = new String[4];
        String tgian;
        int tg;
        //method 1: tuần tự, 2: ngẫu nhiên
        //speed 1:chậm, 2: trung bình 3:nhanh
        int dem = 0, snn;
        try {
            //tong++;
            //System.out.println(tong);
            ketqua2.setText(dung2 + "/" + tong2);
            System.out.println("end");
            Main db = new Main();
            db.connect();
            //System.out.println(db.executeUpdate() + "row");
            level = null;
            method = 0;
            speed = 0;
            if (cb_n1.isSelected()) {
                level = cb_n1.getText();
            }
            if (cb_n2.isSelected()) {
                level = cb_n2.getText();
            }
            if (cb_n3.isSelected()) {
                level = cb_n3.getText();
            }
            if (cb_n4.isSelected()) {
                level = cb_n4.getText();
            }
            if (cb_n5.isSelected()) {
                level = cb_n5.getText();
            }
            if (level == null) {
                JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cấp độ kiểm tra");
            } else {
                if (cb_tt.isSelected()) {
                    method = 1;
                }
                if (cb_nn.isSelected()) {
                    method = 2;
                }
                if (cb_tk.isSelected()) {
                    int begin = 0, end = 0;
                    begin = Integer.parseInt(txt_begin.getText().trim());
                    end = Integer.parseInt(txt_end.getText().trim());
                    if (begin != 0) {
                        if (end != 0) {
                            method = 3;
                        } else {
                            JOptionPane.showMessageDialog(null, "Bạn vui lòng kiểm tra lại khoảng câu hỏi");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Bạn vui lòng kiểm tra lại khoảng câu hỏi");
                    }
                }
                if (method == 0) {
                    JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cách thức kiểm tra");
                }
                /* 
                 else
                 {
                 if(method==2)
                 {
                 if(cb_cham.isSelected())
                 {
                 speed=1;
                 }
                 if(cb_tb.isSelected())
                 {
                 speed=2;
                 }
                 if(cb_nhanh.isSelected())
                 {
                 speed=3;
                 }
                 if(speed==0)
                 {
                 JOptionPane.showMessageDialog(null, "Ban vui lòng chọn tốc độ kiểm tra.");
                 }
                 }
                 }*/
            }
            if (method == 2) {
                tong2++;
                ketqua2.setText(dung2 + "/" + tong2);
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }

                snn = rand(1, dem);
                String strNumber = String.format("%d", snn);
                sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                //System.out.println(sqlCommand);
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                    if (rs.getString(3) != null) {
                        txt_cau_hoi2.setText(rs.getString(3).trim());
                    }
                    cauhoi = rs.getString(3);
                    //txt_cau_hoi.setText(cauhoi);
                    nghia = rs.getString(4);
                    dapan2 = rs.getString(2);
                    mangda[0] = dapan2;

                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[1] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[2] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[3] = rs.getString(1);
                }

                // System.out.println("Chọn đáp án đúng: " + cauhoi);
                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;
                dap_an9.setText(mangda[0]);
                dap_an10.setText(mangda[1]);
                dap_an11.setText(mangda[2]);
                dap_an12.setText(mangda[3]);
            }

            if (method == 3) {
                tong2++;
                ketqua2.setText(dung2 + "/" + tong2);
                int begin = Integer.parseInt(txt_begin.getText().trim());
                int end = Integer.parseInt(txt_end.getText().trim());
                if (end < begin) {
                    JOptionPane.showMessageDialog(null, "Bạn đã nhập sai khoảng từ.");
                }
                int duyet = begin-1;
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                //for(duyet=1;duyet<=dem;duyet++){
                if (duyet < end) {
                    duyet++;
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi2.setText(rs.getString(3).trim());
                        }
                        cauhoi = rs.getString(3);
                        //txt_cau_hoi.setText(cauhoi);
                        nghia = rs.getString(4);
                        dapan2 = rs.getString(2);
                        mangda[0] = dapan2;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an9.setText(mangda[0]);
                    dap_an10.setText(mangda[1]);
                    dap_an11.setText(mangda[2]);
                    dap_an12.setText(mangda[3]);
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết số từ lựa chọn");
                }
            }

            if (method == 1) {
                tong2++;
                ketqua2.setText(dung2 + "/" + tong2);
                int duyet = 0;
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                //for(duyet=1;duyet<=dem;duyet++){
                if (duyet <= dem) {
                    duyet++;
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi2.setText(rs.getString(3).trim());
                        }
                        cauhoi = rs.getString(3);
                        //txt_cau_hoi.setText(cauhoi);
                        nghia = rs.getString(4);
                        dapan2 = rs.getString(2);
                        mangda[0] = dapan2;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                        //System.out.println(mangda[1]);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select jp from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an9.setText(mangda[0]);
                    dap_an10.setText(mangda[1]);
                    dap_an11.setText(mangda[2]);
                    dap_an12.setText(mangda[3]);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_batdau3ActionPerformed

    private void ketqua2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketqua2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ketqua2ActionPerformed

    private void reset3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset3ActionPerformed
        // TODO add your handling code here:

        tong2 = 0;
        dung2 = 0;
        duyet2 = 0;
        ketqua2.setText(dung2 + "/" + tong2);
        dap_an9.setText(" ");
        dap_an10.setText(" ");
        dap_an11.setText(" ");
        dap_an12.setText(" ");
        txt_cau_hoi2.setText(" ");
        JOptionPane.showMessageDialog(null, "Bạn đã RESET kết quả thành công");
    }//GEN-LAST:event_reset3ActionPerformed

    private void txt_cau_hoi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cau_hoi3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cau_hoi3ActionPerformed

    private void dap_an13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an13ActionPerformed
        // TODO add your handling code here:
        group7.add(dap_an13);
    }//GEN-LAST:event_dap_an13ActionPerformed

    private void dap_an14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an14ActionPerformed
        // TODO add your handling code here:
        group7.add(dap_an14);
    }//GEN-LAST:event_dap_an14ActionPerformed

    private void dap_an15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an15ActionPerformed
        // TODO add your handling code here:
        group7.add(dap_an15);
    }//GEN-LAST:event_dap_an15ActionPerformed

    private void dap_an16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dap_an16ActionPerformed
        // TODO add your handling code here:
        group7.add(dap_an16);
    }//GEN-LAST:event_dap_an16ActionPerformed

    private void tra_loi3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tra_loi3ActionPerformed
        // TODO add your handling code here:
        String xau = null;
        if (dap_an13.isSelected()) {

            xau = dap_an13.getText();

        }

        if (dap_an14.isSelected()) {

            xau = dap_an14.getText();

        }

        if (dap_an15.isSelected()) {

            xau = dap_an15.getText();
        }

        if (dap_an16.isSelected()) {

            xau = dap_an16.getText();
        }
        if (xau == null) {
            ht_ketqua3.setText("Bạn vui lòng chọn đáp án");
        } else {
            if (xau == dapan3) {
                //JOptionPane.showMessageDialog(null,"Bạn đã trả lời đúng.");
                ht_ketqua3.setText("Bạn đã trả lời đúng. :" + dapan3.trim() + "( " + cauhoi.trim() + " ):" + nghia.trim());
                dung3++;
            } else {
                // JOptionPane.showMessageDialog(null,"Bạn đã trả lời sai - " + cauhoi.trim()+" : "+dapan);
                ht_ketqua3.setText("Bạn đã trả lời sai: " + dapan3.trim() + "( " + cauhoi.trim() + " ):" + nghia.trim());
            }
        }
        ketqua3.setText(dung3 + "/" + tong3);
        //---------------------------------------------------------
        if (method == 1) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {

                //ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                if (duyet3 == 0) {
                    duyet3++;
                }
                if (duyet3 < dem) {
                    duyet3++;
                    System.out.println(duyet2);
                    String strNumber = String.format("%d", duyet3);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            tong3++;
                            ketqua3.setText(dung3 + "/" + tong3);
                            txt_cau_hoi3.setText(rs.getString(2).trim());
                            cauhoi = rs.getString(2);
                            //txt_cau_hoi.setText(cauhoi);
                            nghia = rs.getString(4);
                            dapan3 = rs.getString(3);
                            mangda[0] = dapan3;

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[1] = rs.getString(3);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[2] = rs.getString(3);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[3] = rs.getString(3);
                            }

                            // System.out.println("Chọn đáp án đúng: " + cauhoi);
                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;
                            dap_an13.setText(mangda[0]);
                            dap_an14.setText(mangda[1]);
                            dap_an15.setText(mangda[2]);
                            dap_an16.setText(mangda[3]);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho từ");
                    //tong2 = tong2 - 1;
                    //ketqua2.setText(dung2 + " / " + tong2);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (method == 2) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {

                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                snn = rand(1, dem);
                String strNumber = String.format("%d", snn);
                sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");

                    if (rs.getString(3) != null) {
                        txt_cau_hoi3.setText(rs.getString(2).trim());
                        tong3++;
                        ketqua3.setText(dung3 + "/" + tong3);
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        nghia = rs.getString(4);
                        dapan3 = rs.getString(3);
                        mangda[0] = dapan3;

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[1] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[2] = rs.getString(1);
                        }

                        strNumber = String.format("%d", rand(1, dem));
                        sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                        rs = db.retrieveData(sqlCommand);
                        while (rs.next()) {
                            mangda[3] = rs.getString(1);
                        }

                        // System.out.println("Chọn đáp án đúng: " + cauhoi);
                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;

                        tg = rand(0, 3);
                        tgian = mangda[tg];
                        mangda[tg] = mangda[0];
                        mangda[0] = tgian;
                        dap_an13.setText(mangda[0]);
                        dap_an14.setText(mangda[1]);
                        dap_an15.setText(mangda[2]);
                        dap_an16.setText(mangda[3]);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (method == 3) {
            String[] mangda = new String[4];
            String tgian;
            int tg;
            int dem = 0, snn;
            try {

                //ketqua.setText(dung + "/" + tong);
                Main db = new Main();
                db.connect();
                //System.out.println(db.executeUpdate() + "row");
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                int begin = Integer.parseInt(txt_begin.getText().trim());
                int end = Integer.parseInt(txt_end.getText().trim());
                if (duyet3 == 0) {
                    duyet3 = begin;
                }
                if (duyet3 < end) {
                    duyet3++;
                    System.out.println(duyet3);
                    String strNumber = String.format("%d", duyet3);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        //txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi3.setText(rs.getString(2).trim());
                            tong3++;
                            ketqua3.setText(dung3 + "/" + tong3);
                            cauhoi = rs.getString(2);
                            //txt_cau_hoi.setText(cauhoi);
                            nghia = rs.getString(4);
                            dapan3 = rs.getString(3);
                            mangda[0] = dapan3;

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[1] = rs.getString(3);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[2] = rs.getString(3);
                            }

                            strNumber = String.format("%d", rand(1, dem));
                            sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                            rs = db.retrieveData(sqlCommand);
                            while (rs.next()) {
                                mangda[3] = rs.getString(3);
                            }

                            // System.out.println("Chọn đáp án đúng: " + cauhoi);
                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;

                            tg = rand(0, 3);
                            tgian = mangda[tg];
                            mangda[tg] = mangda[0];
                            mangda[0] = tgian;
                            dap_an13.setText(mangda[0]);
                            dap_an14.setText(mangda[1]);
                            dap_an15.setText(mangda[2]);
                            dap_an16.setText(mangda[3]);

                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết kho số từ lựa chọn");
                    //tong2 = tong2 - 1;
                    //ketqua2.setText(dung2 + " / " + tong2);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tra_loi3ActionPerformed

    private void btn_batdau4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batdau4ActionPerformed
        // TODO add your handling code here:
        String[] mangda = new String[4];
        String tgian;
        int tg;
        //method 1: tuần tự, 2: ngẫu nhiên
        //speed 1:chậm, 2: trung bình 3:nhanh
        int dem = 0, snn;
        try {
            //tong++;
            //System.out.println(tong);
            ketqua3.setText(dung3 + "/" + tong3);
            System.out.println("end");
            Main db = new Main();
            db.connect();
            //System.out.println(db.executeUpdate() + "row");
            level = null;
            method = 0;
            speed = 0;
            if (cb_n1.isSelected()) {
                level = cb_n1.getText();
            }
            if (cb_n2.isSelected()) {
                level = cb_n2.getText();
            }
            if (cb_n3.isSelected()) {
                level = cb_n3.getText();
            }
            if (cb_n4.isSelected()) {
                level = cb_n4.getText();
            }
            if (cb_n5.isSelected()) {
                level = cb_n5.getText();
            }
            if (level == null) {
                JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cấp độ kiểm tra");
            } else {
                if (cb_tt.isSelected()) {
                    method = 1;
                }
                if (cb_nn.isSelected()) {
                    method = 2;
                }
                if (cb_tk.isSelected()) {
                    int begin = 0, end = 0;
                    begin = Integer.parseInt(txt_begin.getText().trim());
                    end = Integer.parseInt(txt_end.getText().trim());
                    if (begin != 0) {
                        if (end != 0) {
                            method = 3;
                        } else {
                            JOptionPane.showMessageDialog(null, "Bạn vui lòng kiểm tra lại khoảng câu hỏi");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Bạn vui lòng kiểm tra lại khoảng câu hỏi");
                    }
                }
                if (method == 0) {
                    JOptionPane.showMessageDialog(null, "Bạn vui lòng chọn cách thức kiểm tra");
                }
                /* 
                 else
                 {
                 if(method==2)
                 {
                 if(cb_cham.isSelected())
                 {
                 speed=1;
                 }
                 if(cb_tb.isSelected())
                 {
                 speed=2;
                 }
                 if(cb_nhanh.isSelected())
                 {
                 speed=3;
                 }
                 if(speed==0)
                 {
                 JOptionPane.showMessageDialog(null, "Ban vui lòng chọn tốc độ kiểm tra.");
                 }
                 }
                 }*/
            }
            if (method == 2) {
                tong3++;
                ketqua3.setText(dung3 + "/" + tong3);
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }

                snn = rand(1, dem);
                String strNumber = String.format("%d", snn);
                sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                //System.out.println(sqlCommand);
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                    // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                    if (rs.getString(3) != null) {
                        txt_cau_hoi3.setText(rs.getString(2).trim());
                    }
                    cauhoi = rs.getString(2);
                    //txt_cau_hoi.setText(cauhoi);
                    nghia = rs.getString(4);
                    dapan3 = rs.getString(3);
                    mangda[0] = dapan3;

                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[1] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[2] = rs.getString(1);
                }

                strNumber = String.format("%d", rand(1, dem));
                sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    mangda[3] = rs.getString(1);
                }

                // System.out.println("Chọn đáp án đúng: " + cauhoi);
                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;

                tg = rand(0, 3);
                tgian = mangda[tg];
                mangda[tg] = mangda[0];
                mangda[0] = tgian;
                dap_an13.setText(mangda[0]);
                dap_an14.setText(mangda[1]);
                dap_an15.setText(mangda[2]);
                dap_an16.setText(mangda[3]);
            }

            if (method == 3) {
                tong3++;
                ketqua3.setText(dung3 + "/" + tong3);
                int begin = Integer.parseInt(txt_begin.getText().trim());
                int end = Integer.parseInt(txt_end.getText().trim());
                if (end < begin) {
                    JOptionPane.showMessageDialog(null, "Bạn đã nhập sai khoảng từ.");
                }
                int duyet = begin-1;
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                //for(duyet=1;duyet<=dem;duyet++){
                if (duyet < end) {
                    duyet++;
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi3.setText(rs.getString(2).trim());
                        }
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        nghia = rs.getString(4);
                        dapan3 = rs.getString(3);
                        mangda[0] = dapan3;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an13.setText(mangda[0]);
                    dap_an14.setText(mangda[1]);
                    dap_an15.setText(mangda[2]);
                    dap_an16.setText(mangda[3]);
                } else {
                    JOptionPane.showMessageDialog(null, "Bạn đã kiểm tra hết số từ lựa chọn");
                }
            }

            if (method == 1) {
                tong3++;
                ketqua3.setText(dung3 + "/" + tong3);
                int duyet = 0;
                String sqlCommand = "Select count(stt) from htmt_" + level;
                ResultSet rs = db.retrieveData(sqlCommand);
                while (rs.next()) {
                    dem = rs.getInt(1);
                }
                //for(duyet=1;duyet<=dem;duyet++){
                if (duyet <= dem) {
                    duyet++;
                    String strNumber = String.format("%d", duyet);
                    sqlCommand = "Select * from htmt_" + level + " where stt=" + strNumber;
                    System.out.println(sqlCommand);
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        //  System.out.print("Chọn đáp án đúng: "+ rs.getString(2).trim() + "(" + rs.getString(3).trim()+ "):\n");
                        // txt_cau_hoi.setText(rs.getString(2).trim() + "   (" + rs.getString(3).trim()+ ")");
                        if (rs.getString(3) != null) {
                            txt_cau_hoi3.setText(rs.getString(2).trim());
                        }
                        cauhoi = rs.getString(2);
                        //txt_cau_hoi.setText(cauhoi);
                        nghia = rs.getString(4);
                        dapan3 = rs.getString(3);
                        mangda[0] = dapan3;

                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[1] = rs.getString(1);
                        //System.out.println(mangda[1]);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[2] = rs.getString(1);
                    }

                    strNumber = String.format("%d", rand(1, dem));
                    sqlCommand = "Select kanji from htmt_" + level + " where stt=" + strNumber;
                    rs = db.retrieveData(sqlCommand);
                    while (rs.next()) {
                        mangda[3] = rs.getString(1);
                    }

                    // System.out.println("Chọn đáp án đúng: " + cauhoi);
                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;

                    tg = rand(0, 3);
                    tgian = mangda[tg];
                    mangda[tg] = mangda[0];
                    mangda[0] = tgian;
                    dap_an13.setText(mangda[0]);
                    dap_an14.setText(mangda[1]);
                    dap_an15.setText(mangda[2]);
                    dap_an16.setText(mangda[3]);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_batdau4ActionPerformed

    private void ketqua3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketqua3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ketqua3ActionPerformed

    private void reset4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset4ActionPerformed
        // TODO add your handling code here:
        tong3 = 0;
        dung3 = 0;
        duyet3 = 0;
        ketqua3.setText(dung3 + "/" + tong3);
        dap_an13.setText(" ");
        dap_an14.setText(" ");
        dap_an15.setText(" ");
        dap_an16.setText(" ");
        txt_cau_hoi3.setText(" ");
        JOptionPane.showMessageDialog(null, "Bạn đã RESET kết quả thành công");
    }//GEN-LAST:event_reset4ActionPerformed

    private void ketqua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ketqua1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ketqua1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Multi_test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Multi_test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Multi_test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Multi_test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Multi_test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_batdau1;
    private javax.swing.JButton btn_batdau2;
    private javax.swing.JButton btn_batdau3;
    private javax.swing.JButton btn_batdau4;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_stop;
    private javax.swing.JCheckBox cb_cham;
    private javax.swing.JCheckBox cb_n1;
    private javax.swing.JCheckBox cb_n2;
    private javax.swing.JCheckBox cb_n3;
    private javax.swing.JCheckBox cb_n4;
    private javax.swing.JCheckBox cb_n5;
    private javax.swing.JCheckBox cb_nhanh;
    private javax.swing.JCheckBox cb_nn;
    private javax.swing.JCheckBox cb_tb;
    private javax.swing.JCheckBox cb_tk;
    private javax.swing.JCheckBox cb_tt;
    private javax.swing.JRadioButton dap_an1;
    private javax.swing.JRadioButton dap_an10;
    private javax.swing.JRadioButton dap_an11;
    private javax.swing.JRadioButton dap_an12;
    private javax.swing.JRadioButton dap_an13;
    private javax.swing.JRadioButton dap_an14;
    private javax.swing.JRadioButton dap_an15;
    private javax.swing.JRadioButton dap_an16;
    private javax.swing.JRadioButton dap_an2;
    private javax.swing.JRadioButton dap_an3;
    private javax.swing.JRadioButton dap_an4;
    private javax.swing.JRadioButton dap_an5;
    private javax.swing.JRadioButton dap_an6;
    private javax.swing.JRadioButton dap_an7;
    private javax.swing.JRadioButton dap_an8;
    private javax.swing.JRadioButton dap_an9;
    private javax.swing.JLabel ht_ketqua;
    private javax.swing.JLabel ht_ketqua1;
    private javax.swing.JLabel ht_ketqua2;
    private javax.swing.JLabel ht_ketqua3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField ketqua;
    private javax.swing.JTextField ketqua1;
    private javax.swing.JTextField ketqua2;
    private javax.swing.JTextField ketqua3;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset2;
    private javax.swing.JButton reset3;
    private javax.swing.JButton reset4;
    private javax.swing.JTable table_w;
    private javax.swing.JLabel tb_soluong;
    private javax.swing.JLabel tb_thongbao;
    private javax.swing.JButton tra_loi1;
    private javax.swing.JButton tra_loi2;
    private javax.swing.JButton tra_loi3;
    private javax.swing.JTextField txt_begin;
    private javax.swing.JTextField txt_cau_hoi;
    private javax.swing.JTextField txt_cau_hoi1;
    private javax.swing.JTextField txt_cau_hoi2;
    private javax.swing.JTextField txt_cau_hoi3;
    private javax.swing.JTextField txt_end;
    // End of variables declaration//GEN-END:variables
}
